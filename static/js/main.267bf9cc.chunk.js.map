{"version":3,"sources":["individual-data/individualData.module.scss","college-data/collegeData.module.scss","UserContext.js","navbar/navbar.js","layout/layout.js","landing/landing.js","instructions/instructions.js","dragNdrop/dragPreferrence.js","individual-data/individualData.js","college-data/collegeData.js","preferences/preferences.js","overlay/overlay.js","setup/setup.js","algorithm/utils.js","algorithm/Student.js","algorithm/College.js","algorithm/CollegeAdmission.js","algorithm/run.js","algorithm/config.js","run-algorithm/runAlgorithm.js","spreadsheet/spreadsheet.js","result/resultSpreadSheet.js","hexchart/hexchart.js","result/resultChart.js","result/resultLogTxt.js","App.js","index.js"],"names":["module","exports","UserContext","createContext","NavBar","Navbar","bg","variant","sticky","className","Brand","as","Link","to","Nav","Button","NavDropdown","title","id","Item","href","Divider","Layout","children","Landing","Jumbotron","width","height","src","frameborder","allow","allowfullscreen","target","rel","PageOne","PageTwo","PageThree","PageFour","PageFive","Instructions","useState","showModal","setShowModal","closeModal","page","setPage","content","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","onClick","DragPreference","isGroup","idx","useContext","collegeData","setCollegeData","individualData","setIndividualData","preferenceList","preference","onDragEnd","result","destination","newPreferenceList","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","newCollegeData","map","item","newIndividualData","droppableId","direction","provided","snapshot","ref","innerRef","style","isDraggingOver","background","display","padding","overflow","droppableProps","key","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","name","placeholder","IndividualData","IndividualDataStyles","table","Table","size","striped","bordered","hover","ele","type","value","onChange","event","handleChange","CollegeData","CollegeDataStyles","quota","Preferences","initiated","Tabs","defaultActiveKey","Tab","eventKey","Overlay","popover","Popover","Content","OverlayTrigger","placement","overlay","delay","hide","Badge","Setup","history","stuN","setStuN","colN","setColN","initiate","createCollegeArray","newCollegeArray","i","push","parseInt","keys","createIndividualArray","newIndividualArray","e","preventDefault","IDFactory","this","count","idFactory","Student","createID","matchedWith","nextProposal","proposedToAll","appliedBy","priorityList","rankingOfMatch","Error","length","allApplicants","self","sort","colA","colB","rankingA","indexOf","rankingB","colToAdd","colToDrop","string","toString","forEach","v","reset","College","remainingQuota","proposeList","slice","previousList","concat","stuA","stuB","filter","includes","match","CollegeAdmissionProblem","studentList","collegeList","log","studentPropose","match_CollegePropose","round","roundLog","student","targetCollege","proposeTo","college","printNames","reviewWaitingList","stuToAdd","stuToDrop","stuId","existsFreeStudents","setRankingOfMatch","resetID","pos","stu","filtered","stuID","existsFreeColleges","listOfID","isStudentList","theList","nameString","reduce","acc","run","stuData","colData","isFavorStudent","col","config","problem","stuResult","isMatched","matchedWithName","preferenceNames","colResult","quotaLeft","allPairs","stuPreference","colPreference","pairing","pair","RunAlgorithm","setCollegeResult","setIndividualResult","setLogDetails","logDetails","setAllPairs","setIsFavorStudent","Form","Check","inline","label","checked","SpreadSheet","data","isStu","dataIndexedOne","setting","dataSchema","startCols","colHeaders","rowHeaders","columns","licenseKey","settings","ResultSpreadSheet","individualResult","collegeResult","HexbinSizeChart","hoveredNode","setHoveredNode","xDomain","yDomain","getX","d","getY","onMouseLeave","sizeHexagonsWithCount","animation","stroke","strokeLinejoin","colorRange","onValueMouseOver","radius","all","fill","text","xPercent","yPercent","transform","textAnchor","xType","yType","frequency","ResultChart","ResultLogTxt","index1","sentence","index2","App","Provider","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.267bf9cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"individualData_table__2m3cE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"collegeData_table__3P-d0\"};","import { createContext } from \"react\";\r\nexport const UserContext = createContext(null);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavDropdown, Button } from \"react-bootstrap\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Navbar\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      sticky=\"top\"\r\n      className=\"d-flex justify-content-between\"\r\n    >\r\n      <Navbar.Brand as={Link} to=\"/stable-matching-many-to-one/\">\r\n        Matching Optimizier\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-5\">\r\n        <Nav.Link as={Link} to=\"/stable-matching-many-to-one/step1\">\r\n          1. Initialize\r\n        </Nav.Link>\r\n        <Nav.Link as={Link} to=\"/stable-matching-many-to-one/step2\">\r\n          2. Set Preferences\r\n        </Nav.Link>\r\n        <Button\r\n          variant=\"primary\"\r\n          //   variant=\"outline-info\"\r\n          as={Link}\r\n          to=\"/stable-matching-many-to-one/step3\"\r\n        >\r\n          3. Begin matching\r\n        </Button>\r\n        <NavDropdown title=\"4. View Results\" id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item\r\n            as={Link}\r\n            to=\"/stable-matching-many-to-one/step4/spreadsheets\"\r\n          >\r\n            Spreadsheets\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item\r\n            as={Link}\r\n            to=\"/stable-matching-many-to-one/step4/charts\"\r\n          >\r\n            Charts\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item href=\"#action/3.2\">Log</NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item\r\n            as={Link}\r\n            to=\"/stable-matching-many-to-one/step4/logtxt\"\r\n          >\r\n            Log as txt\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport NavBar from \"../navbar/navbar\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Jumbotron, Button } from \"react-bootstrap\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Let computers do your matching</h1>\r\n        <p>\r\n          Having trouble in deciding how to put your employees in different\r\n          teams/departments? Let the amazing algorithm finds the optimal matches\r\n          for you.\r\n        </p>\r\n        <p>\r\n          <Button\r\n            variant=\"primary\"\r\n            as={Link}\r\n            to=\"/stable-matching-many-to-one/step1\"\r\n          >\r\n            Start\r\n          </Button>\r\n        </p>\r\n      </Jumbotron>\r\n      <div className=\"p-4\">\r\n        <h1>What problem does it solve?</h1>\r\n        <p>\r\n          The National Resident Matching Program (NRMP), also called The\r\n          Match,[1] is a United States-based private non-profit non-governmental\r\n          organization created in 1952 to place U.S. medical school students\r\n          into residency training programs located in United States teaching\r\n          hospitals. Its mission has since expanded to include the placement of\r\n          U.S. citizen and non-U.S. citizen international medical school\r\n          students and graduates into residency and fellowship training\r\n          programs. In addition to the annual Main Residency Match that\r\n          encompasses more than 43,000 applicants and 31,000 positions, the NRMP\r\n          conducts Fellowship Matches for more than 60 subspecialties through\r\n          its Specialties Matching Service (SMS). The NRMP is sponsored by a\r\n          Board of Directors that includes medical school deans, teaching\r\n          hospital executives, graduate medical education program directors,\r\n          medical students and residents, and one public member.\r\n        </p>\r\n        <div>\r\n          <iframe\r\n            width=\"560\"\r\n            height=\"315\"\r\n            src=\"https://www.youtube.com/embed/mFh3JIaMGJo\"\r\n            frameborder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowfullscreen\r\n          ></iframe>\r\n        </div>\r\n        <h1>How does this work?</h1>\r\n        <div>\r\n          <p>\r\n            It finds the best matches between groups and individuals according\r\n            to their preferences. It uses the{\" \"}\r\n            <a\r\n              href=\"https://en.wikipedia.org/wiki/Gale%E2%80%93Shapley_algorithm\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Gale–Shapley algorithm\r\n            </a>{\" \"}\r\n            for finding the solution.\r\n          </p>\r\n          <p>\r\n            The Gale–Shapley algorithm guarantees that the matching it produces\r\n            is either optimal for the participants on one side of the matching,\r\n            or for the participants on the other side. It makes sure that all\r\n            matches are{\" \"}\r\n            <a\r\n              href=\"https://en.wikipedia.org/wiki/Stable_marriage_problem\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              stable\r\n            </a>\r\n            , or in other words, optimal.\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <iframe\r\n            width=\"560\"\r\n            height=\"315\"\r\n            src=\"https://www.youtube.com/embed/fudb8DuzQlM\"\r\n            frameborder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowfullscreen\r\n          ></iframe>\r\n        </div>\r\n        <Button\r\n          variant=\"primary\"\r\n          href=\"https://core.ac.uk/download/pdf/42368869.pdf\"\r\n        >\r\n          Academic reference\r\n        </Button>\r\n        <p></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nconst PageOne = [\r\n  <div>Welcome to Matching Optimizier!</div>,\r\n  <div>\r\n    <div>\r\n      This short tutorial will walk you through all of the features of this\r\n      application.\r\n    </div>\r\n    <div>\r\n      If you want to dive right in, feel free to press the \"Skip Tutorial\"\r\n      button below. Otherwise, press \"Next\"!\r\n    </div>\r\n  </div>,\r\n];\r\nconst PageTwo = [\r\n  <div>What does this Matching Optimizier do?</div>,\r\n  <div>\r\n    <div>\r\n      It finds the best matches between groups and individuals according to\r\n      their preferences. It uses the{\" \"}\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/Gale%E2%80%93Shapley_algorithm\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Gale–Shapley algorithm\r\n      </a>{\" \"}\r\n      for finding the solution.\r\n    </div>\r\n    <div>\r\n      The Gale–Shapley algorithm guarantees that the matching it produces is\r\n      either optimal for the participants on one side of the matching, or for\r\n      the participants on the other side. It makes sure that all matches are{\" \"}\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/Stable_marriage_problem\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        stable\r\n      </a>\r\n      , or in other words, optimal.\r\n    </div>\r\n  </div>,\r\n];\r\nconst PageThree = [\r\n  <div>Step 1: Set sizes of party A and B</div>,\r\n  <div>\r\n    <div>\r\n      Party A (Persons): Collection of persons who will only be matched to one\r\n      group.\r\n    </div>\r\n    <div>\r\n      Party B (Groups): Collection of groups which can be matched to more than\r\n      one person, up to its quota.\r\n    </div>\r\n    <div>\r\n      In{\" \"}\r\n      <Button variant=\"dark\" className=\"m-2\">\r\n        1. Initialize\r\n      </Button>\r\n      You will set the numbers of members for party A and B respectively.\r\n    </div>\r\n  </div>,\r\n];\r\nconst PageFour = [\r\n  <div>Step 2: Set preferences of each instances of party A and B</div>,\r\n  <div>\r\n    <div>\r\n      In{\" \"}\r\n      <Button variant=\"dark\" className=\"m-2\">\r\n        2. Set Preferences\r\n      </Button>\r\n      You will set the preferences of each instances of party A and B\r\n      respectively, and also set the quota for each of the member in party B.\r\n    </div>\r\n  </div>,\r\n];\r\nconst PageFive = [\r\n  <div>Step 3: Set which side to favour</div>,\r\n  <div>\r\n    <div>\r\n      The outcome of the Gale–Shapley algorithm, guarantees that the matching it\r\n      produces is either optimal for the participants on one side of the\r\n      matching, or for the participants on the other side.\r\n    </div>\r\n    <div>\r\n      In{\" \"}\r\n      <Button variant=\"primary\" className=\"m-2\">\r\n        3. Begin matching\r\n      </Button>\r\n      You will define which side is the favoured side.\r\n    </div>\r\n  </div>,\r\n];\r\nconst Instructions = () => {\r\n  const [showModal, setShowModal] = useState(true);\r\n  const closeModal = () => setShowModal(false);\r\n  const [page, setPage] = useState(1);\r\n  let [title, content] = [\"\", \"\"];\r\n  switch (page) {\r\n    case 1:\r\n      [title, content] = PageOne;\r\n      break;\r\n    case 2:\r\n      [title, content] = PageTwo;\r\n      break;\r\n    case 3:\r\n      [title, content] = PageThree;\r\n      break;\r\n    case 4:\r\n      [title, content] = PageFour;\r\n      break;\r\n    case 5:\r\n      [title, content] = PageFive;\r\n      break;\r\n    default:\r\n    // code block\r\n  }\r\n  return (\r\n    <Modal\r\n      show={showModal}\r\n      onHide={closeModal}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{content}</Modal.Body>\r\n      <Modal.Footer className=\"d-flex justify-content-between\">\r\n        <div>\r\n          <Button variant=\"secondary\" className=\"m-2\" onClick={closeModal}>\r\n            Skip\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          {page}/5\r\n          {page !== 1 ? (\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"m-2\"\r\n              onClick={() => setPage(page - 1)}\r\n            >\r\n              Previous\r\n            </Button>\r\n          ) : null}\r\n          {page !== 5 ? (\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"m-2\"\r\n              onClick={() => setPage(page + 1)}\r\n            >\r\n              Next\r\n            </Button>\r\n          ) : (\r\n            <Button variant=\"primary\" className=\"m-2\" onClick={closeModal}>\r\n              Start\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Instructions;\r\n","import React, { useContext } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { UserContext } from \"../UserContext\";\r\n\r\nconst DragPreference = ({ isGroup, idx }) => {\r\n  const {\r\n    collegeData,\r\n    setCollegeData,\r\n    individualData,\r\n    setIndividualData,\r\n  } = useContext(UserContext);\r\n  const preferenceList = isGroup\r\n    ? collegeData[idx].preference\r\n    : individualData[idx].preference;\r\n\r\n  const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  const grid = 8;\r\n\r\n  const getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: `0 ${grid}px 0 0`,\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  });\r\n\r\n  const getListStyle = (isDraggingOver) => ({\r\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n    display: \"flex\",\r\n    padding: grid,\r\n    overflow: \"auto\",\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const newPreferenceList = reorder(\r\n      preferenceList,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    if (isGroup) {\r\n      const newCollegeData = collegeData.map((item) => {\r\n        if (item.idx === idx) {\r\n          const updatedItem = {\r\n            ...item,\r\n            preference: newPreferenceList,\r\n          };\r\n          return updatedItem;\r\n        }\r\n\r\n        return item;\r\n      });\r\n      setCollegeData(newCollegeData);\r\n    } else {\r\n      const newIndividualData = individualData.map((item) => {\r\n        if (item.idx === idx) {\r\n          const updatedItem = {\r\n            ...item,\r\n            preference: newPreferenceList,\r\n          };\r\n          return updatedItem;\r\n        }\r\n\r\n        return item;\r\n      });\r\n      setIndividualData(newIndividualData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            style={getListStyle(snapshot.isDraggingOver)}\r\n            {...provided.droppableProps}\r\n          >\r\n            {preferenceList.map((item, index) => {\r\n              return (\r\n                <Draggable key={item} draggableId={`${item}`} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      {isGroup\r\n                        ? individualData[item].name\r\n                        : collegeData[item].name}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default DragPreference;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport IndividualDataStyles from \"./individualData.module.scss\";\r\nimport DragPreference from \"../dragNdrop/dragPreferrence\";\r\n\r\nconst IndividualData = () => {\r\n  const { individualData, setIndividualData } = useContext(UserContext);\r\n  const handleChange = (event, idx) => {\r\n    const newIndividualData = individualData.map((item) => {\r\n      if (item.idx === idx) {\r\n        const updatedItem = {\r\n          ...item,\r\n          [event.target.name]: event.target.value,\r\n        };\r\n        return updatedItem;\r\n      }\r\n\r\n      return item;\r\n    });\r\n    setIndividualData(newIndividualData);\r\n  };\r\n  return (\r\n    <div className={IndividualDataStyles.table}>\r\n      <Table size=\"sm\" striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Preferences (leftmost being most preferred)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {individualData.map((ele, idx) => {\r\n            return (\r\n              <tr>\r\n                <td>{idx}</td>\r\n                <td>\r\n                  {\" \"}\r\n                  <input\r\n                    type=\"text\"\r\n                    id={`individual-${idx}-name`}\r\n                    name=\"name\"\r\n                    value={individualData[idx].name}\r\n                    onChange={(event) => handleChange(event, idx)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <DragPreference isGroup={false} idx={idx} />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualData;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport CollegeDataStyles from \"./collegeData.module.scss\";\r\nimport DragPreference from \"../dragNdrop/dragPreferrence\";\r\n\r\nconst CollegeData = () => {\r\n  const { collegeData, setCollegeData } = useContext(UserContext);\r\n  const handleChange = (event, idx) => {\r\n    const newCollegeData = collegeData.map((item) => {\r\n      if (item.idx === idx) {\r\n        const updatedItem = {\r\n          ...item,\r\n          [event.target.name]: event.target.value,\r\n        };\r\n        return updatedItem;\r\n      }\r\n\r\n      return item;\r\n    });\r\n    setCollegeData(newCollegeData);\r\n  };\r\n  return (\r\n    <div className={CollegeDataStyles.table}>\r\n      <Table size=\"sm\" striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Quota</th>\r\n            <th>Preferences (leftmost being most preferred)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {collegeData.map((ele, idx) => {\r\n            return (\r\n              <tr>\r\n                <td>{idx}</td>\r\n                <td>\r\n                  {\" \"}\r\n                  <input\r\n                    type=\"text\"\r\n                    id={`college-${idx}-name`}\r\n                    name=\"name\"\r\n                    value={collegeData[idx].name}\r\n                    onChange={(event) => handleChange(event, idx)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    id={`college-${idx}-quota`}\r\n                    name=\"quota\"\r\n                    value={collegeData[idx].quota}\r\n                    onChange={(event) => handleChange(event, idx)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <DragPreference isGroup={true} idx={idx} />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollegeData;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { Tab, Tabs, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IndividualData from \"../individual-data/individualData\";\r\nimport CollegeData from \"../college-data/collegeData\";\r\n\r\nconst Preferences = () => {\r\n  const { initiated } = useContext(UserContext);\r\n  return (\r\n    <div>\r\n      <h3>Step 2. Set preferences</h3>\r\n      {initiated ? (\r\n        <Tabs defaultActiveKey=\"Individuals\" id=\"uncontrolled-tab-example\">\r\n          <Tab eventKey=\"Individuals\" title=\"Individuals\">\r\n            <IndividualData />\r\n          </Tab>\r\n          <Tab eventKey=\"Groups\" title=\"Groups\">\r\n            <CollegeData />\r\n          </Tab>\r\n        </Tabs>\r\n      ) : (\r\n        <div>You have not yet set the sizes of the two sides.</div>\r\n      )}\r\n      <div style={{ padding: \"10px\" }}>\r\n        <Button\r\n          variant=\"primary\"\r\n          as={Link}\r\n          to=\"/stable-matching-many-to-one/step1\"\r\n          style={{ margin: \"20px\" }}\r\n        >\r\n          Previous step\r\n        </Button>\r\n        {initiated ? (\r\n          <Button\r\n            variant=\"primary\"\r\n            as={Link}\r\n            to=\"/stable-matching-many-to-one/step3\"\r\n            style={{ margin: \"20px\" }}\r\n          >\r\n            Next step\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preferences;\r\n","import React from \"react\";\r\nimport { OverlayTrigger, Popover, Badge } from \"react-bootstrap\";\r\n\r\nconst Overlay = ({ title, content }) => {\r\n  const popover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\">{title}</Popover.Title>\r\n      <Popover.Content>{content}</Popover.Content>\r\n    </Popover>\r\n  );\r\n  return (\r\n    <OverlayTrigger\r\n      placement=\"right\"\r\n      overlay={popover}\r\n      delay={{ show: 100, hide: 200 }}\r\n    >\r\n      <Badge variant=\"info\">?</Badge>\r\n    </OverlayTrigger>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport Overlay from \"../overlay/overlay\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Setup = ({ history }) => {\r\n  const {\r\n    stuN,\r\n    setStuN,\r\n    colN,\r\n    setColN,\r\n    initiated,\r\n    initiate,\r\n    setCollegeData,\r\n    setIndividualData,\r\n  } = useContext(UserContext);\r\n  const initialize = (e) => {\r\n    e.preventDefault();\r\n    setCollegeData(createCollegeArray(colN));\r\n    setIndividualData(createIndividualArray(stuN));\r\n    initiate(true);\r\n    history.push(\"/stable-matching-many-to-one/step2\");\r\n  };\r\n  const createCollegeArray = (colN) => {\r\n    let newCollegeArray = [];\r\n    for (var i = 0; i < colN; i++) {\r\n      newCollegeArray.push({\r\n        idx: i,\r\n        name: `Group ${i}`,\r\n        quota: 0,\r\n        preference: Array.from(Array(parseInt(stuN)).keys()),\r\n      });\r\n    }\r\n    return newCollegeArray;\r\n  };\r\n  const createIndividualArray = (stuN) => {\r\n    let newIndividualArray = [];\r\n    for (var i = 0; i < stuN; i++) {\r\n      newIndividualArray.push({\r\n        idx: i,\r\n        name: `Person ${i}`,\r\n        preference: Array.from(Array(parseInt(colN)).keys()),\r\n      });\r\n    }\r\n    return newIndividualArray;\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>Step 1. Initialize</h3>\r\n      <div>\r\n        Party A{\" \"}\r\n        <Overlay\r\n          title=\"Party A\"\r\n          content={\r\n            <div>\r\n              Party A represents the <strong>student/applicant side</strong>{\" \"}\r\n              which can only be matched with at most one member of party B.\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n      <form>\r\n        <label>No. of individuals (e.g. applicants/trainees/employees):</label>\r\n        <br />\r\n        <input\r\n          type=\"number\"\r\n          id=\"stuN\"\r\n          name=\"stuN\"\r\n          value={stuN}\r\n          onChange={(e) => setStuN(e.target.value)}\r\n        />\r\n        <br />\r\n        <div>\r\n          Party B{\" \"}\r\n          <Overlay\r\n            title=\"Party B\"\r\n            content={\r\n              <div>\r\n                Party B represents the <strong>college/hospital side</strong>{\" \"}\r\n                with a positive integral quota equal or larger than 1\r\n              </div>\r\n            }\r\n          />\r\n        </div>\r\n        <label>No. of Party B (e.g. colleges/teams/departments):</label>\r\n        <br />\r\n        <input\r\n          type=\"number\"\r\n          id=\"colN\"\r\n          name=\"colN\"\r\n          value={colN}\r\n          onChange={(e) => setColN(e.target.value)}\r\n        />\r\n        <Button onClick={initialize} variant=\"primary\" className=\"d-block\">\r\n          {initiated ? \"Reset\" : \"Set up\"}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Setup;\r\n","// const College = require(\"./College\");\r\n\r\nexport class IDFactory {\r\n  constructor() {\r\n    this.count = 0;\r\n  }\r\n\r\n  createID() {\r\n    let id = this.count;\r\n    this.count += 1;\r\n    return id;\r\n  }\r\n  reset() {\r\n    this.count = 0;\r\n  }\r\n}\r\n\r\n// module.exports = {\r\n//   IDFactory: IDFactory,\r\n// };\r\n","// const utils = require(\"./utils.js\");\r\n// const idFactory = new utils.IDFactory();\r\nimport { IDFactory } from \"./utils.js\";\r\nconst idFactory = new IDFactory();\r\n\r\nclass Student {\r\n  constructor(name, preferenceList) {\r\n    this.id = idFactory.createID();\r\n    this.matchedWith = null;\r\n    this.nextProposal = 0;\r\n    this.proposedToAll = false;\r\n    this.appliedBy = [];\r\n    this.name = name;\r\n    this.priorityList = preferenceList;\r\n    this.rankingOfMatch = -1;\r\n  }\r\n\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  setPriorityList(list) {\r\n    if (!(typeof list == \"object\")) {\r\n      throw new Error(\r\n        \"Person.priorityList must be of type array but is: \" + typeof list\r\n      );\r\n    }\r\n    this.priorityList = list;\r\n  }\r\n  proposeTo() {\r\n    this.nextProposal++;\r\n    if (this.nextProposal === this.priorityList.length) {\r\n      this.proposedToAll = true;\r\n    }\r\n    return this.priorityList[this.nextProposal - 1];\r\n  }\r\n  reviewWaitingList() {\r\n    if (this.appliedBy.length === 0) {\r\n      return null;\r\n    }\r\n    let allApplicants = this.appliedBy;\r\n    if (this.matchedWith !== null) {\r\n      allApplicants.push(this.matchedWith);\r\n    }\r\n    var self = this;\r\n    function compareCollege(colA, colB) {\r\n      let rankingA = self.priorityList.indexOf(colA);\r\n      let rankingB = self.priorityList.indexOf(colB);\r\n      if (rankingA < rankingB) {\r\n        return -1;\r\n      }\r\n      if (rankingA > rankingB) {\r\n        return 1;\r\n      }\r\n    }\r\n    allApplicants.sort(compareCollege);\r\n    this.appliedBy = [];\r\n    let colToAdd = null;\r\n    let colToDrop = null;\r\n    if (allApplicants[0] !== this.matchedWith) {\r\n      colToAdd = allApplicants[0];\r\n      colToDrop = this.matchedWith;\r\n      this.matchedWith = colToAdd;\r\n    }\r\n    return [colToAdd, colToDrop];\r\n  }\r\n\r\n  toString() {\r\n    return (\r\n      \"Student {id: \" + this.id + \", matchedWith: \" + this.matchedWith + \"}\"\r\n    );\r\n  }\r\n\r\n  printPriorityList() {\r\n    if (this.priorityList) {\r\n      var string = this.id + \" \" + this.toString() + \": \";\r\n      this.priorityList.forEach((v, i) => {\r\n        string += i === 0 ? v : \", \" + v;\r\n      });\r\n      return string;\r\n    } else {\r\n      return this.id + \": - no priorities -\";\r\n    }\r\n  }\r\n\r\n  setRankingOfMatch() {\r\n    this.rankingOfMatch = this.priorityList.indexOf(this.matchedWith);\r\n  }\r\n\r\n  resetID() {\r\n    idFactory.reset();\r\n  }\r\n}\r\n\r\n// module.exports = Student;\r\nexport default Student;\r\n","// const utils = require(\"./utils.js\");\r\n// const idFactory = new utils.IDFactory();\r\nimport { IDFactory } from \"./utils.js\";\r\nconst idFactory = new IDFactory();\r\n\r\nclass College {\r\n  constructor(name, quota, preferenceList) {\r\n    this.id = idFactory.createID();\r\n    this.matchedWith = [];\r\n    this.appliedBy = [];\r\n    this.quota = quota;\r\n    this.nextProposal = 0;\r\n    this.proposedToAll = false;\r\n    this.name = name;\r\n    this.priorityList = preferenceList;\r\n    this.rankingOfMatch = [];\r\n  }\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n  proposeTo() {\r\n    const remainingQuota = this.quota - this.matchedWith.length;\r\n    const proposeList = this.priorityList.slice(\r\n      this.nextProposal,\r\n      this.nextProposal + remainingQuota\r\n    );\r\n    this.nextProposal = this.nextProposal + remainingQuota;\r\n    if (this.nextProposal === this.priorityList.length) {\r\n      this.proposedToAll = true;\r\n    }\r\n\r\n    return proposeList;\r\n  }\r\n  reviewWaitingList() {\r\n    if (this.appliedBy.length === 0) {\r\n      return null;\r\n    }\r\n    const previousList = this.matchedWith;\r\n    let allApplicants = this.matchedWith.concat(this.appliedBy);\r\n\r\n    var self = this;\r\n    function compareStudent(stuA, stuB) {\r\n      let rankingA = self.priorityList.indexOf(stuA);\r\n      let rankingB = self.priorityList.indexOf(stuB);\r\n      if (rankingA < rankingB) {\r\n        return -1;\r\n      }\r\n      if (rankingA > rankingB) {\r\n        return 1;\r\n      }\r\n    }\r\n    allApplicants.sort(compareStudent);\r\n\r\n    if (allApplicants.length > this.quota) {\r\n      this.matchedWith = allApplicants.slice(0, this.quota);\r\n    } else {\r\n      this.matchedWith = allApplicants;\r\n    }\r\n    this.appliedBy = [];\r\n    let stuToAdd = this.matchedWith.filter(\r\n      (ele) => !previousList.includes(ele)\r\n    );\r\n    let stuToDrop = previousList.filter(\r\n      (ele) => !this.matchedWith.includes(ele)\r\n    );\r\n    return [stuToAdd, stuToDrop];\r\n  }\r\n\r\n  setPriorityList(list) {\r\n    if (!(typeof list == \"object\")) {\r\n      throw new Error(\r\n        \"College.priorityList must be of type array but is: \" + typeof list\r\n      );\r\n    }\r\n    this.priorityList = list;\r\n  }\r\n\r\n  toString() {\r\n    return (\r\n      \"College {id: \" +\r\n      this.id +\r\n      \", matchedWith: \" +\r\n      this.matchedWith.toString() +\r\n      \"}\"\r\n    );\r\n  }\r\n\r\n  printPriorityList() {\r\n    if (this.priorityList) {\r\n      var string = this.id + \" \" + this.toString() + \": \";\r\n      this.priorityList.forEach((v, i) => {\r\n        string += i === 0 ? v : \", \" + v;\r\n      });\r\n      return string;\r\n    } else {\r\n      return this.id + \": - no priorities -\";\r\n    }\r\n  }\r\n  setRankingOfMatch() {\r\n    this.matchedWith.forEach((match) => {\r\n      this.rankingOfMatch.push(this.priorityList.indexOf(match));\r\n    });\r\n  }\r\n  resetID() {\r\n    idFactory.reset();\r\n  }\r\n}\r\n\r\nexport default College;\r\n// module.exports = College;\r\n","//https://github.com/mgschoen/stable-marriage\r\n\r\nexport default class CollegeAdmissionProblem {\r\n  constructor(studentList, collegeList) {\r\n    this.studentList = studentList;\r\n    this.collegeList = collegeList;\r\n    this.log = [];\r\n  }\r\n  //http://sephlietz.com/gale-shapley/\r\n  match(studentPropose = true) {\r\n    if (!studentPropose) {\r\n      return this.match_CollegePropose();\r\n    }\r\n    var round = 1;\r\n    while (this.existsFreeStudents() && round <= 9999) {\r\n      let roundLog = [];\r\n      roundLog.push(`Round ${round}`);\r\n      this.studentList.forEach((student) => {\r\n        if (student.matchedWith === null && !student.proposedToAll) {\r\n          let targetCollege = this.collegeList[student.proposeTo()];\r\n          targetCollege.appliedBy.push(student.id);\r\n          roundLog.push(\r\n            `${student.name} applied to his/her next favorite group which is ${targetCollege.name}`\r\n          );\r\n        } else {\r\n          // roundLog.push(\r\n          //   `${student.name} was already tentatively accepted by ${\r\n          //     this.collegeList[student.matchWith].name\r\n          //   }`\r\n          // );\r\n        }\r\n      });\r\n      roundLog.push(\"---------------------------------------\");\r\n      this.collegeList.forEach((college) => {\r\n        roundLog.push(`${college.name}:`);\r\n        if (college.appliedBy.length === 0) {\r\n          roundLog.push(\r\n            `${college.name} was not applied by any persons in this round`\r\n          );\r\n        } else {\r\n          roundLog.push(\r\n            `${college.name} had ${\r\n              college.quota - college.matchedWith.length\r\n            } quota left`\r\n          );\r\n          roundLog.push(\r\n            `${college.name} was applied by ${this.printNames(\r\n              college.appliedBy,\r\n              true\r\n            )} in this round`\r\n          );\r\n          let result = college.reviewWaitingList();\r\n          let [stuToAdd, stuToDrop] = result;\r\n          if (stuToAdd.length > 0) {\r\n            roundLog.push(\r\n              `${college.name} combined the previous acceptees with the new applicants this round and made the following decisions in accordance to its preference list and its remaining quota:`\r\n            );\r\n            roundLog.push(\r\n              `${college.name} tentatively accepted ${this.printNames(\r\n                stuToAdd,\r\n                true\r\n              )}`\r\n            );\r\n            if (stuToDrop.length > 0) {\r\n              roundLog.push(\r\n                `${college.name} dropped ${this.printNames(stuToDrop, true)}`\r\n              );\r\n            }\r\n            stuToAdd.forEach((stuId) => {\r\n              let student = this.studentList[stuId];\r\n              student.matchedWith = college.id;\r\n            });\r\n            stuToDrop.forEach((stuId) => {\r\n              let student = this.studentList[stuId];\r\n              student.matchedWith = null;\r\n            });\r\n          } else {\r\n            roundLog.push(\r\n              `${college.name} rejected all of its applicants in this round`\r\n            );\r\n          }\r\n        }\r\n        roundLog.push(\"---------------------------------------\");\r\n      });\r\n      round++;\r\n      roundLog.push(\"---------------------------------------\");\r\n      this.log.push(roundLog);\r\n    }\r\n\r\n    this.studentList.forEach((student) => {\r\n      student.setRankingOfMatch();\r\n    });\r\n    this.collegeList.forEach((college) => {\r\n      college.setRankingOfMatch();\r\n    });\r\n\r\n    //this is to simply reset the IDFactory to zero for next potential matching\r\n    this.studentList[0].resetID();\r\n    this.collegeList[0].resetID();\r\n  }\r\n  match_CollegePropose() {\r\n    var round = 1;\r\n    while (this.existsFreeColleges() && round <= 9999) {\r\n      let roundLog = [];\r\n      roundLog.push(`Round ${round}`);\r\n      this.collegeList.forEach((college) => {\r\n        const remainingQuota = college.quota - college.matchedWith.length;\r\n        if (remainingQuota > 0 && !college.proposedToAll) {\r\n          roundLog.push(`${college.name} has ${remainingQuota} quota left`);\r\n          let targetStudents = college\r\n            .proposeTo()\r\n            .map((pos) => this.studentList[pos]);\r\n          targetStudents.forEach((stu) => {\r\n            stu.appliedBy.push(college.id);\r\n            roundLog.push(`${college.name} sent invitation to: ${stu.name}`);\r\n          });\r\n        }\r\n      });\r\n      roundLog.push(\"---------------------------------------\");\r\n      this.studentList.forEach((student) => {\r\n        roundLog.push(`${student.name}:`);\r\n        if (student.appliedBy.length === 0) {\r\n          roundLog.push(\r\n            `${student.name} was not invited by any group in this round`\r\n          );\r\n        } else {\r\n          roundLog.push(\r\n            `${student.name} was applied by ${this.printNames(\r\n              student.appliedBy,\r\n              false\r\n            )} in this round`\r\n          );\r\n          const result = student.reviewWaitingList();\r\n          const [colToAdd, colToDrop] = result;\r\n          if (colToAdd !== null) {\r\n            this.collegeList[colToAdd].matchedWith.push(student.id);\r\n            if (colToDrop === null) {\r\n              roundLog.push(\r\n                `${student.name} chose ${this.collegeList[colToAdd].name}`\r\n              );\r\n            } else {\r\n              const filtered = this.collegeList[colToDrop].matchedWith.filter(\r\n                (stuID) => {\r\n                  return stuID !== student.id;\r\n                }\r\n              );\r\n              this.collegeList[colToDrop].matchedWith = filtered;\r\n              roundLog.push(\r\n                `${student.name} chose ${this.collegeList[colToAdd].name} and dropped the original offer from ${this.collegeList[colToDrop].name}`\r\n              );\r\n            }\r\n          } else {\r\n            roundLog.push(\r\n              `${student.name} preferred the original offer from ${\r\n                this.collegeList[student.matchedWith].name\r\n              }`\r\n            );\r\n          }\r\n        }\r\n        roundLog.push(\"---------------------------------------\");\r\n      });\r\n      round++;\r\n      roundLog.push(\"---------------------------------------\");\r\n      this.log.push(roundLog);\r\n    }\r\n\r\n    this.studentList.forEach((student) => {\r\n      student.setRankingOfMatch();\r\n    });\r\n    this.collegeList.forEach((college) => {\r\n      college.setRankingOfMatch();\r\n    });\r\n\r\n    //this is to simply reset the IDFactory to zero for next potential matching\r\n    this.studentList[0].resetID();\r\n    this.collegeList[0].resetID();\r\n  }\r\n  existsFreeStudents() {\r\n    for (let student of this.studentList) {\r\n      if (student.matchedWith === null && !student.proposedToAll) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  existsFreeColleges() {\r\n    for (let college of this.collegeList) {\r\n      const remainingQuota = college.quota - college.matchedWith.length;\r\n      if (remainingQuota > 0 && !college.proposedToAll) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  printNames(listOfID, isStudentList) {\r\n    const theList = isStudentList ? this.studentList : this.collegeList;\r\n    const nameList = listOfID.map((id) => theList[id].name);\r\n    let nameString = nameList.reduce((acc, ele) => acc + \" \" + ele, \"(\");\r\n    nameString = nameString + \")\";\r\n    return nameString;\r\n  }\r\n}\r\n\r\n// module.exports = CollegeAdmissionProblem;\r\n","//wrapper: raw data => config.js => CollegeAdmission.js\r\nimport config from \"./config\";\r\nimport CollegeAdmissionProblem from \"./CollegeAdmission\";\r\n// const config = require(\"./config\");\r\n// const CollegeAdmissionProblem = require(\"./CollegeAdmission\");\r\n\r\nfunction run(stuData, colData, isFavorStudent) {\r\n  const [studentList, collegeList] = config(stuData, colData);\r\n  let problem = new CollegeAdmissionProblem(studentList, collegeList);\r\n  problem.match(isFavorStudent);\r\n  const stuResult = stuData.map((stu, index) => {\r\n    const result = {\r\n      ...stu,\r\n      matchedWith: studentList[index].matchedWith,\r\n      isMatched: studentList[index].matchedWith !== null,\r\n      matchedWithName:\r\n        studentList[index].matchedWith !== null\r\n          ? collegeList[studentList[index].matchedWith].name\r\n          : null,\r\n      rankingOfMatch: studentList[index].rankingOfMatch,\r\n      preferenceNames: stu.preference.map((pos) => collegeList[pos].name),\r\n    };\r\n    return result;\r\n  });\r\n  const colResult = colData.map((col, index) => {\r\n    const result = {\r\n      ...col,\r\n      matchedWith: collegeList[index].matchedWith,\r\n      quotaLeft:\r\n        collegeList[index].quota - collegeList[index].matchedWith.length,\r\n      matchedWithName:\r\n        collegeList[index].matchedWith.length > 0\r\n          ? collegeList[index].matchedWith.map((pos) => studentList[pos].name)\r\n          : null,\r\n      rankingOfMatch: collegeList[index].rankingOfMatch,\r\n      preferenceNames: col.preference.map((pos) => studentList[pos].name),\r\n    };\r\n    return result;\r\n  });\r\n  let allPairs = stuResult.map((stu, index) => {\r\n    const result =\r\n      stu.rankingOfMatch !== -1\r\n        ? {\r\n            stuPreference: stu.rankingOfMatch,\r\n            colPreference: collegeList[\r\n              studentList[index].matchedWith\r\n            ].priorityList.indexOf(index),\r\n            pairing: `${studentList[index].name} <-> ${\r\n              collegeList[studentList[index].matchedWith].name\r\n            }`,\r\n          }\r\n        : null;\r\n    return result;\r\n  });\r\n  allPairs = allPairs.filter((pair) => pair !== null);\r\n  return [stuResult, colResult, problem.log, allPairs];\r\n}\r\n\r\nexport default run;\r\n// module.exports = run;\r\n","//convert raw data from front-end to college/students objects for CollegeAdmission.js\r\n// const Student = require(\"./Student.js\");\r\n// const College = require(\"./College.js\");\r\nimport Student from \"./Student.js\";\r\nimport College from \"./College.js\";\r\n\r\nexport default function config(stuData, colData) {\r\n  const studentList = [];\r\n  const collegeList = [];\r\n  stuData.forEach((stu) => {\r\n    const student = new Student(stu.name, stu.preference);\r\n    studentList.push(student);\r\n  });\r\n\r\n  colData.forEach((col) => {\r\n    const college = new College(col.name, col.quota, col.preference);\r\n    collegeList.push(college);\r\n  });\r\n  return [studentList, collegeList];\r\n}\r\n\r\n// module.exports = config;\r\n","import React, { useContext } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport run from \"../algorithm/run\";\r\n\r\nconst RunAlgorithm = ({ history }) => {\r\n  const {\r\n    initiated,\r\n    collegeData,\r\n    setCollegeResult,\r\n    individualData,\r\n    setIndividualResult,\r\n    logDetails,\r\n    setLogDetails,\r\n    setAllPairs,\r\n    isFavorStudent,\r\n    setIsFavorStudent,\r\n  } = useContext(UserContext);\r\n\r\n  const runAlgorithm = (e) => {\r\n    e.preventDefault();\r\n    const [newIndividualData, newCollegeData, logDetails, allPairs] = run(\r\n      individualData,\r\n      collegeData,\r\n      isFavorStudent\r\n    );\r\n    setCollegeResult(newCollegeData);\r\n    setIndividualResult(newIndividualData);\r\n    setLogDetails(logDetails);\r\n    setAllPairs(allPairs);\r\n    history.push(\"/stable-matching-many-to-one/step4/spreadsheets\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Step 3. Begin matching</h3>\r\n      {initiated ? (\r\n        <div>\r\n          <Form>\r\n            <div key=\"inline-radio\" className=\"mb-3\">\r\n              <Form.Check\r\n                inline\r\n                label=\"Favour party A (individual side)\"\r\n                type=\"radio\"\r\n                id=\"inline-radio-1\"\r\n                name=\"exampleRadios\"\r\n                checked={isFavorStudent}\r\n                onChange={() => {\r\n                  setIsFavorStudent(true);\r\n                }}\r\n              />\r\n              <Form.Check\r\n                inline\r\n                label=\"Favour party B (group side)\"\r\n                type=\"radio\"\r\n                id=\"inline-radio-2\"\r\n                name=\"exampleRadios\"\r\n                checked={!isFavorStudent}\r\n                onChange={() => {\r\n                  setIsFavorStudent(false);\r\n                }}\r\n              />\r\n            </div>\r\n          </Form>\r\n          <Button\r\n            variant=\"primary\"\r\n            as={Link}\r\n            to=\"/stable-matching-many-to-one/step2\"\r\n            style={{ margin: \"20px\" }}\r\n          >\r\n            Previous step\r\n          </Button>\r\n          <Button onClick={runAlgorithm} style={{ margin: \"20px\" }}>\r\n            Begin matching\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div>You have not yet set the sizes of the two sides.</div>\r\n          <Button\r\n            variant=\"primary\"\r\n            as={Link}\r\n            to=\"/stable-matching-many-to-one/step1\"\r\n            style={{ margin: \"20px\" }}\r\n          >\r\n            Return to setup\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RunAlgorithm;\r\n","import \"handsontable/dist/handsontable.full.css\";\r\nimport React from \"react\";\r\nimport { HotTable } from \"@handsontable/react\";\r\n// import Handsontable from \"handsontable\";\r\n\r\nconst SpreadSheet = ({ data, isStu }) => {\r\n  const dataIndexedOne = isStu\r\n    ? data.map((ele) => {\r\n        const newEle = { ...ele, rankingOfMatch: ele.rankingOfMatch + 1 };\r\n        return newEle;\r\n      })\r\n    : data.map((ele) => {\r\n        const newEle = {\r\n          ...ele,\r\n          rankingOfMatch: ele.rankingOfMatch.map((pos) => pos + 1),\r\n        };\r\n        return newEle;\r\n      });\r\n  const setting = isStu\r\n    ? {\r\n        data: dataIndexedOne,\r\n        dataSchema: {\r\n          idx: null,\r\n          name: null,\r\n          preferenceNames: null,\r\n          matchedWithName: null,\r\n          rankingOfMatch: null,\r\n          isMatched: null,\r\n        },\r\n        startCols: 6,\r\n        colHeaders: [\r\n          \"ID\",\r\n          \"Name\",\r\n          \"Matched with\",\r\n          \"Ranking of its match\",\r\n          \"Is matched?\",\r\n          \"Original preference\",\r\n        ],\r\n        rowHeaders: true,\r\n        columns: [\r\n          { data: \"idx\" },\r\n          { data: \"name\" },\r\n          { data: \"matchedWithName\" },\r\n          { data: \"rankingOfMatch\" },\r\n          { data: \"isMatched\" },\r\n          { data: \"preferenceNames\" },\r\n        ],\r\n\r\n        licenseKey: \"non-commercial-and-evaluation\",\r\n      }\r\n    : {\r\n        data: dataIndexedOne,\r\n        dataSchema: {\r\n          idx: null,\r\n          name: null,\r\n          quota: null,\r\n          preferenceNames: null,\r\n          matchedWithName: null,\r\n          rankingOfMatch: null,\r\n          quotaLeft: null,\r\n        },\r\n        startCols: 7,\r\n        colHeaders: [\r\n          \"ID\",\r\n          \"Name\",\r\n          \"Quota\",\r\n          \"Matched with\",\r\n          \"Ranking of its match\",\r\n          \"Quota left\",\r\n          \"Original preference\",\r\n        ],\r\n        rowHeaders: true,\r\n        columns: [\r\n          { data: \"idx\" },\r\n          { data: \"name\" },\r\n          { data: \"quota\" },\r\n          { data: \"matchedWithName\" },\r\n          { data: \"rankingOfMatch\" },\r\n          { data: \"quotaLeft\" },\r\n          { data: \"preferenceNames\" },\r\n        ],\r\n\r\n        licenseKey: \"non-commercial-and-evaluation\",\r\n      };\r\n  return (\r\n    <div>\r\n      <div>\r\n        {isStu\r\n          ? \"Matching result of the individuals:\"\r\n          : \"Matching result of the groups:\"}\r\n      </div>\r\n      <HotTable settings={setting} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpreadSheet;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport SpreadSheet from \"../spreadsheet/spreadsheet\";\r\n\r\nconst ResultSpreadSheet = () => {\r\n  const { individualResult, collegeResult } = useContext(UserContext);\r\n  return (\r\n    <div>\r\n      {collegeResult.length > 0 ? (\r\n        <SpreadSheet isStu={false} data={collegeResult} />\r\n      ) : null}\r\n      {individualResult.length > 0 ? (\r\n        <SpreadSheet isStu={true} data={individualResult} />\r\n      ) : null}\r\n      <Button\r\n        variant=\"primary\"\r\n        as={Link}\r\n        to=\"/stable-matching-many-to-one/step4/charts\"\r\n      >\r\n        View Charts\r\n      </Button>\r\n      <Button\r\n        variant=\"primary\"\r\n        as={Link}\r\n        to=\"/stable-matching-many-to-one/step4/logtxt\"\r\n      >\r\n        View Log\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultSpreadSheet;\r\n","import React, { useState } from \"react\";\r\nimport \"react-vis/dist/style.css\";\r\nimport {\r\n  XYPlot,\r\n  HexbinSeries,\r\n  XAxis,\r\n  YAxis,\r\n  ChartLabel,\r\n  Borders,\r\n  Hint,\r\n} from \"react-vis\";\r\n\r\nconst HexbinSizeChart = ({ data, stuN, colN }) => {\r\n  const [hoveredNode, setHoveredNode] = useState();\r\n  const dataIndexedOne = data.map((ele) => {\r\n    const newEle = {\r\n      ...ele,\r\n      stuPreference: ele.stuPreference + 1,\r\n      colPreference: ele.colPreference + 1,\r\n    };\r\n    return newEle;\r\n  });\r\n  return (\r\n    <XYPlot\r\n      xDomain={[-1, colN + 1]}\r\n      yDomain={[-1, stuN + 1]}\r\n      getX={(d) => d.stuPreference}\r\n      getY={(d) => d.colPreference}\r\n      width={500}\r\n      height={300}\r\n      margin={50}\r\n      onMouseLeave={() => setHoveredNode(null)}\r\n    >\r\n      <HexbinSeries\r\n        sizeHexagonsWithCount\r\n        animation\r\n        className=\"hexbin-example\"\r\n        style={{\r\n          stroke: \"#125C77\",\r\n          strokeLinejoin: \"round\",\r\n        }}\r\n        colorRange={[\"orange\", \"cyan\"]}\r\n        onValueMouseOver={(d) => {\r\n          setHoveredNode(d);\r\n        }}\r\n        radius={15}\r\n        data={dataIndexedOne}\r\n      />\r\n      <Borders style={{ all: { fill: \"#fff\" } }} />\r\n      <XAxis />\r\n      <YAxis />\r\n      <ChartLabel\r\n        text=\"Position of selected persons in preference list\"\r\n        className=\"alt-x-label\"\r\n        xPercent={0.1}\r\n        yPercent={0.0}\r\n        style={{\r\n          transform: \"rotate(90)\",\r\n          textAnchor: \"start\",\r\n        }}\r\n      />\r\n\r\n      <ChartLabel\r\n        text=\"Position of selected groups in preference list\"\r\n        className=\"alt-y-label\"\r\n        xPercent={0.5}\r\n        yPercent={0.65}\r\n        style={{\r\n          textAnchor: \"start\",\r\n        }}\r\n      />\r\n      {hoveredNode && (\r\n        <Hint\r\n          xType=\"literal\"\r\n          yType=\"literal\"\r\n          getX={(d) => hoveredNode[0].stuPreference}\r\n          getY={(d) => hoveredNode[0].colPreference}\r\n          value={{\r\n            \"personal preference\": hoveredNode[0].stuPreference,\r\n            \"group preference\": hoveredNode[0].colPreference,\r\n            match:\r\n              hoveredNode.length === 1\r\n                ? hoveredNode[0].pairing\r\n                : `${hoveredNode[0].pairing} and ${\r\n                    hoveredNode.length - 1\r\n                  } more`,\r\n            frequency: hoveredNode.length,\r\n          }}\r\n        />\r\n      )}\r\n    </XYPlot>\r\n  );\r\n};\r\n\r\nexport default HexbinSizeChart;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport HexbinSizeChart from \"../hexchart/hexchart\";\r\n\r\nconst ResultChart = () => {\r\n  const { stuN, colN, allPairs } = useContext(UserContext);\r\n  return (\r\n    <div>\r\n      {allPairs.length > 0 ? (\r\n        <HexbinSizeChart data={allPairs} stuN={stuN} colN={colN} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultChart;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\n\r\nconst ResultLogTxt = () => {\r\n  const { logDetails } = useContext(UserContext);\r\n\r\n  return (\r\n    <div>\r\n      {logDetails.map((round, index1) => (\r\n        <div key={index1}>\r\n          {round.map((sentence, index2) => (\r\n            <p key={index2}>{sentence}</p>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultLogTxt;\r\n","import React, { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { UserContext } from \"./UserContext\";\nimport Layout from \"./layout/layout\";\nimport Landing from \"./landing/landing\";\nimport Instructions from \"./instructions/instructions\";\nimport Preferences from \"./preferences/preferences\";\nimport Setup from \"./setup/setup\";\nimport RunAlgorithm from \"./run-algorithm/runAlgorithm\";\nimport ResultSpreadSheet from \"./result/resultSpreadSheet\";\nimport ResultChart from \"./result/resultChart\";\nimport ResultLogTxt from \"./result/resultLogTxt\";\n\nfunction App() {\n  const [stuN, setStuN] = useState(0);\n  const [colN, setColN] = useState(0);\n  const [initiated, initiate] = useState(false);\n  const [collegeData, setCollegeData] = useState([]);\n  const [individualData, setIndividualData] = useState([]);\n  const [collegeResult, setCollegeResult] = useState([]);\n  const [individualResult, setIndividualResult] = useState([]);\n  const [logDetails, setLogDetails] = useState([]);\n  const [allPairs, setAllPairs] = useState([]);\n  const [isFavorStudent, setIsFavorStudent] = useState(false);\n\n  return (\n    <UserContext.Provider\n      value={{\n        stuN,\n        setStuN,\n        colN,\n        setColN,\n        initiated,\n        initiate,\n        collegeData,\n        setCollegeData,\n        individualData,\n        setIndividualData,\n        collegeResult,\n        setCollegeResult,\n        individualResult,\n        setIndividualResult,\n        logDetails,\n        setLogDetails,\n        allPairs,\n        setAllPairs,\n        isFavorStudent,\n        setIsFavorStudent,\n      }}\n    >\n      <Layout>\n        <Instructions />\n        <Switch>\n          <Route\n            exact\n            path=\"/stable-matching-many-to-one/\"\n            component={Landing}\n          />\n          <Route\n            exact\n            path=\"/stable-matching-many-to-one/step1\"\n            component={Setup}\n          />\n          <Route\n            exact\n            path=\"/stable-matching-many-to-one/step2\"\n            component={Preferences}\n          />\n          <Route\n            exact\n            path=\"/stable-matching-many-to-one/step3\"\n            component={RunAlgorithm}\n          />\n          <Route\n            exact\n            path=\"/stable-matching-many-to-one/step4/spreadsheets\"\n            component={ResultSpreadSheet}\n          />\n          <Route\n            exact\n            path=\"/stable-matching-many-to-one/step4/charts\"\n            component={ResultChart}\n          />\n          <Route\n            exact\n            path=\"/stable-matching-many-to-one/step4/logtxt\"\n            component={ResultLogTxt}\n          />\n        </Switch>\n      </Layout>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}