{"version":3,"sources":["individual-data/individualData.module.scss","college-data/collegeData.module.scss","UserContext.js","navbar/navbar.js","layout/layout.js","instructions/instructions.js","overlay/overlay.js","dragNdrop/dragPreferrence.js","individual-data/individualData.js","college-data/collegeData.js","setup/setup.js","algorithm/utils.js","algorithm/Student.js","algorithm/College.js","algorithm/CollegeAdmission.js","algorithm/run.js","algorithm/config.js","run-algorithm/runAlgorithm.js","spreadsheet/spreadsheet.js","hexchart/hexchart.js","result/result.js","App.js","index.js"],"names":["module","exports","UserContext","createContext","NavBar","Navbar","bg","variant","sticky","className","Brand","as","Link","to","Nav","href","Button","NavDropdown","title","id","Item","Divider","Layout","children","PageOne","PageTwo","target","rel","PageThree","Instructions","useState","showModal","setShowModal","closeModal","page","setPage","content","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","onClick","Overlay","popover","Popover","Content","OverlayTrigger","placement","overlay","Badge","DragPreference","isGroup","idx","useContext","collegeData","setCollegeData","individualData","setIndividualData","preferenceList","preference","onDragEnd","result","destination","newPreferenceList","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","newCollegeData","map","item","newIndividualData","droppableId","direction","provided","snapshot","ref","innerRef","style","isDraggingOver","background","display","padding","overflow","droppableProps","key","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","name","placeholder","IndividualData","ele","IndividualDataStyles","rowContainer","type","value","onChange","event","handleChange","CollegeData","CollegeDataStyles","quota","Setup","stuN","setStuN","colN","setColN","initiated","initiate","initialize","e","preventDefault","createCollegeArray","createIndividualArray","newCollegeArray","i","push","parseInt","keys","newIndividualArray","IDFactory","this","count","idFactory","Student","createID","matchedWith","nextProposal","proposedToAll","priorityList","rankingOfMatch","Error","length","string","toString","forEach","v","indexOf","reset","College","appliedBy","previousList","allApplicants","concat","self","sort","stuA","stuB","rankingA","rankingB","slice","filter","includes","match","CollegeAdmissionProblem","studentList","collegeList","log","round","roundLog","student","targetCollege","proposeTo","college","printStudentNames","reviewWaitingList","stuToAdd","stuToDrop","stuId","existsFreeStudents","setRankingOfMatch","resetID","listOfStuID","nameString","reduce","acc","run","stuData","colData","stu","col","config","problem","stuResult","isMatched","matchedWithName","preferenceNames","pos","colResult","quotaLeft","allPairs","stuPreference","colPreference","pairing","pair","RunAlgorithm","setCollegeResult","setIndividualResult","logDetails","setLogDetails","setAllPairs","index1","sentence","index2","SpreadSheet","data","isStu","dataIndexedOne","setting","dataSchema","startCols","colHeaders","rowHeaders","columns","licenseKey","settings","HexbinSizeChart","hoveredNode","setHoveredNode","xDomain","yDomain","getX","d","getY","width","height","onMouseLeave","sizeHexagonsWithCount","animation","stroke","strokeLinejoin","colorRange","onValueMouseOver","radius","all","fill","text","xPercent","yPercent","transform","textAnchor","xType","yType","frequency","Result","individualResult","collegeResult","App","Provider","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e9f454b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowContainer\":\"individualData_rowContainer__3Xd6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowContainer\":\"collegeData_rowContainer__3U01K\"};","import { createContext } from \"react\";\r\nexport const UserContext = createContext(null);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Nav, Navbar, NavDropdown, Button } from \"react-bootstrap\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Navbar\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      sticky=\"top\"\r\n      className=\"d-flex justify-content-between\"\r\n    >\r\n      <Navbar.Brand as={Link} to=\"/\">\r\n        Matching Optimizier\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-5\">\r\n        <Nav.Link as={Link} to=\"/\">\r\n          1. Initialize\r\n        </Nav.Link>\r\n        <Nav.Link href=\"#features\">2. Set Preferences</Nav.Link>\r\n        <Button variant=\"outline-info\">3. Begin matching</Button>\r\n        <NavDropdown title=\"4. View Results\" id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item href=\"#action/3.1\">Spreadsheets</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"#action/3.3\">Charts</NavDropdown.Item>\r\n          <NavDropdown.Item href=\"#action/3.2\">Log</NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item href=\"#action/3.4\">Log as txt</NavDropdown.Item>\r\n        </NavDropdown>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport NavBar from \"../navbar/navbar\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nconst PageOne = [\r\n  <div>Welcome to Matching Optimizier!</div>,\r\n  <div>\r\n    <div>\r\n      This short tutorial will walk you through all of the features of this\r\n      application.\r\n    </div>\r\n    <div>\r\n      If you want to dive right in, feel free to press the \"Skip Tutorial\"\r\n      button below. Otherwise, press \"Next\"!\r\n    </div>\r\n  </div>,\r\n];\r\nconst PageTwo = [\r\n  <div>What does this Matching Optimizier do?</div>,\r\n  <div>\r\n    <div>\r\n      It finds the best matches between groups and individuals according to\r\n      their preferences. It uses the{\" \"}\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/Gale%E2%80%93Shapley_algorithm\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Gale–Shapley algorithm\r\n      </a>{\" \"}\r\n      for finding the solution.\r\n    </div>\r\n    <div>\r\n      The Gale–Shapley algorithm guarantees that the matching it produces is\r\n      either optimal for the participants on one side of the matching, or for\r\n      the participants on the other side. It makes sure that all matches are{\" \"}\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/Stable_marriage_problem\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        stable\r\n      </a>\r\n      , or in other words, optimal.\r\n    </div>\r\n  </div>,\r\n];\r\nconst PageThree = [\r\n  <div>Step 1: Define party A and B</div>,\r\n  <div>\r\n    <div>\r\n      Party A (Persons): Collection of persons who will only be matched to one\r\n      group.\r\n    </div>\r\n    <div>\r\n      Party B (Groups): Collection of groups which can be matched to more than\r\n      one person, up to its quota.\r\n    </div>\r\n    <div>\r\n      In{\" \"}\r\n      <Button variant=\"primary\" className=\"m-2\">\r\n        1. Initialize\r\n      </Button>\r\n      You will set the numbers of members for party A and B respectively, and\r\n      also set the quota for each of the member in party B.\r\n    </div>\r\n  </div>,\r\n];\r\nconst Instructions = () => {\r\n  const [showModal, setShowModal] = useState(true);\r\n  const closeModal = () => setShowModal(false);\r\n  const [page, setPage] = useState(1);\r\n  let [title, content] = [\"\", \"\"];\r\n  switch (page) {\r\n    case 1:\r\n      [title, content] = PageOne;\r\n      break;\r\n    case 2:\r\n      [title, content] = PageTwo;\r\n      break;\r\n    case 3:\r\n      [title, content] = PageThree;\r\n      break;\r\n    default:\r\n    // code block\r\n  }\r\n  return (\r\n    <Modal\r\n      show={showModal}\r\n      onHide={closeModal}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{content}</Modal.Body>\r\n      <Modal.Footer className=\"d-flex justify-content-between\">\r\n        <div>\r\n          <Button variant=\"secondary\" className=\"m-2\" onClick={closeModal}>\r\n            Skip\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          {page}/5\r\n          {page !== 1 ? (\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"m-2\"\r\n              onClick={() => setPage(page - 1)}\r\n            >\r\n              Previous\r\n            </Button>\r\n          ) : null}\r\n          {page !== 5 ? (\r\n            <Button\r\n              variant=\"primary\"\r\n              className=\"m-2\"\r\n              onClick={() => setPage(page + 1)}\r\n            >\r\n              Next\r\n            </Button>\r\n          ) : (\r\n            <Button variant=\"primary\" className=\"m-2\" onClick={closeModal}>\r\n              Start\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Instructions;\r\n","import React from \"react\";\r\nimport { OverlayTrigger, Popover, Badge } from \"react-bootstrap\";\r\n\r\nconst Overlay = () => {\r\n  const popover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h3\">Popover right</Popover.Title>\r\n      <Popover.Content>\r\n        And here's some <strong>amazing</strong> content. It's very engaging.\r\n        right?\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n  return (\r\n    <OverlayTrigger\r\n      placement=\"right\"\r\n      overlay={popover}\r\n      //   delay={{ show: 250, hide: 400 }}\r\n    >\r\n      {/* <Button variant=\"secondary\" className=\"d-inline-flex align-items-center\"> */}\r\n      <Badge variant=\"info\">?</Badge>\r\n      {/* <span roundedCircle>?</span> */}\r\n      {/* <span className=\"ml-1\">Hover to see</span> */}\r\n      {/* </Button> */}\r\n    </OverlayTrigger>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import React, { useContext } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { UserContext } from \"../UserContext\";\r\n\r\nconst DragPreference = ({ isGroup, idx }) => {\r\n  const {\r\n    collegeData,\r\n    setCollegeData,\r\n    individualData,\r\n    setIndividualData,\r\n  } = useContext(UserContext);\r\n  const preferenceList = isGroup\r\n    ? collegeData[idx].preference\r\n    : individualData[idx].preference;\r\n\r\n  const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  const grid = 8;\r\n\r\n  const getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: `0 ${grid}px 0 0`,\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  });\r\n\r\n  const getListStyle = (isDraggingOver) => ({\r\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n    display: \"flex\",\r\n    padding: grid,\r\n    overflow: \"auto\",\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const newPreferenceList = reorder(\r\n      preferenceList,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    if (isGroup) {\r\n      const newCollegeData = collegeData.map((item) => {\r\n        if (item.idx === idx) {\r\n          const updatedItem = {\r\n            ...item,\r\n            preference: newPreferenceList,\r\n          };\r\n          return updatedItem;\r\n        }\r\n\r\n        return item;\r\n      });\r\n      setCollegeData(newCollegeData);\r\n    } else {\r\n      const newIndividualData = individualData.map((item) => {\r\n        if (item.idx === idx) {\r\n          const updatedItem = {\r\n            ...item,\r\n            preference: newPreferenceList,\r\n          };\r\n          return updatedItem;\r\n        }\r\n\r\n        return item;\r\n      });\r\n      setIndividualData(newIndividualData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            style={getListStyle(snapshot.isDraggingOver)}\r\n            {...provided.droppableProps}\r\n          >\r\n            {preferenceList.map((item, index) => {\r\n              return (\r\n                <Draggable key={item} draggableId={`${item}`} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      {isGroup\r\n                        ? individualData[item].name\r\n                        : collegeData[item].name}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default DragPreference;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport IndividualDataStyles from \"./individualData.module.scss\";\r\nimport DragPreference from \"../dragNdrop/dragPreferrence\";\r\n\r\nconst IndividualData = () => {\r\n  const { individualData, setIndividualData } = useContext(UserContext);\r\n  const handleChange = (event, idx) => {\r\n    const newIndividualData = individualData.map((item) => {\r\n      if (item.idx === idx) {\r\n        const updatedItem = {\r\n          ...item,\r\n          [event.target.name]: event.target.value,\r\n        };\r\n        return updatedItem;\r\n      }\r\n\r\n      return item;\r\n    });\r\n    setIndividualData(newIndividualData);\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        {individualData.map((ele, idx) => {\r\n          return (\r\n            <div key={idx} className={IndividualDataStyles.rowContainer}>\r\n              <div>Person {idx}</div>\r\n              <div>\r\n                Name\r\n                <input\r\n                  type=\"text\"\r\n                  id={`individual-${idx}-name`}\r\n                  name=\"name\"\r\n                  value={individualData[idx].name}\r\n                  onChange={(event) => handleChange(event, idx)}\r\n                />\r\n              </div>\r\n              <div>\r\n                Preference\r\n                <DragPreference isGroup={false} idx={idx} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndividualData;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport CollegeDataStyles from \"./collegeData.module.scss\";\r\nimport DragPreference from \"../dragNdrop/dragPreferrence\";\r\n\r\nconst CollegeData = () => {\r\n  const { collegeData, setCollegeData } = useContext(UserContext);\r\n  const handleChange = (event, idx) => {\r\n    const newCollegeData = collegeData.map((item) => {\r\n      if (item.idx === idx) {\r\n        const updatedItem = {\r\n          ...item,\r\n          [event.target.name]: event.target.value,\r\n        };\r\n        return updatedItem;\r\n      }\r\n\r\n      return item;\r\n    });\r\n    setCollegeData(newCollegeData);\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        {collegeData.map((ele, idx) => {\r\n          return (\r\n            <div key={idx} className={CollegeDataStyles.rowContainer}>\r\n              <div>Group {idx}</div>\r\n              <div>\r\n                Name\r\n                <input\r\n                  type=\"text\"\r\n                  id={`college-${idx}-name`}\r\n                  name=\"name\"\r\n                  value={collegeData[idx].name}\r\n                  onChange={(event) => handleChange(event, idx)}\r\n                />\r\n              </div>\r\n              <div>\r\n                Quota\r\n                <input\r\n                  type=\"number\"\r\n                  id={`college-${idx}-quota`}\r\n                  name=\"quota\"\r\n                  value={collegeData[idx].quota}\r\n                  onChange={(event) => handleChange(event, idx)}\r\n                />\r\n              </div>\r\n              <div>\r\n                Preference\r\n                <DragPreference isGroup={true} idx={idx} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollegeData;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport Overlay from \"../overlay/overlay\";\r\nimport Instructions from \"../instructions/instructions\";\r\nimport IndividualData from \"../individual-data/individualData\";\r\nimport CollegeData from \"../college-data/collegeData\";\r\n\r\nconst Setup = () => {\r\n  const {\r\n    stuN,\r\n    setStuN,\r\n    colN,\r\n    setColN,\r\n    initiated,\r\n    initiate,\r\n    setCollegeData,\r\n    setIndividualData,\r\n  } = useContext(UserContext);\r\n  const initialize = (e) => {\r\n    e.preventDefault();\r\n    setCollegeData(createCollegeArray(colN));\r\n    setIndividualData(createIndividualArray(stuN));\r\n    initiate(true);\r\n  };\r\n  const createCollegeArray = (colN) => {\r\n    let newCollegeArray = [];\r\n    for (var i = 0; i < colN; i++) {\r\n      newCollegeArray.push({\r\n        idx: i,\r\n        name: `Group ${i}`,\r\n        quota: 0,\r\n        preference: Array.from(Array(parseInt(stuN)).keys()),\r\n      });\r\n    }\r\n    return newCollegeArray;\r\n  };\r\n  const createIndividualArray = (stuN) => {\r\n    let newIndividualArray = [];\r\n    for (var i = 0; i < stuN; i++) {\r\n      newIndividualArray.push({\r\n        idx: i,\r\n        name: `Person ${i}`,\r\n        preference: Array.from(Array(parseInt(colN)).keys()),\r\n      });\r\n    }\r\n    return newIndividualArray;\r\n  };\r\n  return (\r\n    <>\r\n      <Instructions />\r\n      <div>\r\n        <div>Step 1. Initialize</div>\r\n        <form>\r\n          <div>\r\n            Party A <Overlay />\r\n          </div>\r\n          <label>\r\n            No. of individuals (e.g. applicants/trainees/employees):\r\n          </label>\r\n          <br />\r\n          <input\r\n            type=\"number\"\r\n            id=\"stuN\"\r\n            name=\"stuN\"\r\n            value={stuN}\r\n            onChange={(e) => setStuN(e.target.value)}\r\n          />\r\n          <br />\r\n          <label>No. of groups (e.g. colleges/teams/departments):</label>\r\n          <br />\r\n          <input\r\n            type=\"number\"\r\n            id=\"colN\"\r\n            name=\"colN\"\r\n            value={colN}\r\n            onChange={(e) => setColN(e.target.value)}\r\n          />\r\n          {initiated ? (\r\n            <button onClick={initialize}>Reset</button>\r\n          ) : (\r\n            <button onClick={initialize}>Set up</button>\r\n          )}\r\n        </form>\r\n      </div>\r\n      {initiated ? (\r\n        <>\r\n          <IndividualData />\r\n          <CollegeData />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setup;\r\n","// const College = require(\"./College\");\r\n\r\nexport class IDFactory {\r\n  constructor() {\r\n    this.count = 0;\r\n  }\r\n\r\n  createID() {\r\n    let id = this.count;\r\n    this.count += 1;\r\n    return id;\r\n  }\r\n  reset() {\r\n    this.count = 0;\r\n  }\r\n}\r\n\r\n// module.exports = {\r\n//   IDFactory: IDFactory,\r\n// };\r\n","// const utils = require(\"./utils.js\");\r\n// const idFactory = new utils.IDFactory();\r\nimport { IDFactory } from \"./utils.js\";\r\nconst idFactory = new IDFactory();\r\n\r\nclass Student {\r\n  constructor(name, preferenceList) {\r\n    this.id = idFactory.createID();\r\n    this.matchedWith = null;\r\n    this.nextProposal = 0;\r\n    this.proposedToAll = false;\r\n    this.name = name;\r\n    this.priorityList = preferenceList;\r\n    this.rankingOfMatch = -1;\r\n  }\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  setPriorityList(list) {\r\n    if (!(typeof list == \"object\")) {\r\n      throw new Error(\r\n        \"Person.priorityList must be of type array but is: \" + typeof list\r\n      );\r\n    }\r\n    this.priorityList = list;\r\n  }\r\n\r\n  proposeTo() {\r\n    this.nextProposal++;\r\n    if (this.nextProposal === this.priorityList.length) {\r\n      this.proposedToAll = true;\r\n    }\r\n    return this.priorityList[this.nextProposal - 1];\r\n  }\r\n\r\n  toString() {\r\n    return (\r\n      \"Student {id: \" + this.id + \", matchedWith: \" + this.matchedWith + \"}\"\r\n    );\r\n  }\r\n\r\n  printPriorityList() {\r\n    if (this.priorityList) {\r\n      var string = this.id + \" \" + this.toString() + \": \";\r\n      this.priorityList.forEach((v, i) => {\r\n        string += i === 0 ? v : \", \" + v;\r\n      });\r\n      return string;\r\n    } else {\r\n      return this.id + \": - no priorities -\";\r\n    }\r\n  }\r\n\r\n  setRankingOfMatch() {\r\n    this.rankingOfMatch = this.priorityList.indexOf(this.matchedWith);\r\n  }\r\n\r\n  resetID() {\r\n    idFactory.reset();\r\n  }\r\n}\r\n\r\n// module.exports = Student;\r\nexport default Student;\r\n","// const utils = require(\"./utils.js\");\r\n// const idFactory = new utils.IDFactory();\r\nimport { IDFactory } from \"./utils.js\";\r\nconst idFactory = new IDFactory();\r\n\r\nclass College {\r\n  constructor(name, quota, preferenceList) {\r\n    this.id = idFactory.createID();\r\n    this.matchedWith = [];\r\n    this.appliedBy = [];\r\n    this.quota = quota;\r\n    this.nextProposal = 0;\r\n    this.name = name;\r\n    this.priorityList = preferenceList;\r\n    this.rankingOfMatch = [];\r\n  }\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n  reviewWaitingList() {\r\n    if (this.appliedBy.length === 0) {\r\n      return null;\r\n    }\r\n    const previousList = this.matchedWith;\r\n    let allApplicants = this.matchedWith.concat(this.appliedBy);\r\n\r\n    var self = this;\r\n    function compareStudent(stuA, stuB) {\r\n      let rankingA = self.priorityList.indexOf(stuA);\r\n      let rankingB = self.priorityList.indexOf(stuB);\r\n      if (rankingA < rankingB) {\r\n        return -1;\r\n      }\r\n      if (rankingA > rankingB) {\r\n        return 1;\r\n      }\r\n    }\r\n    allApplicants.sort(compareStudent);\r\n\r\n    if (allApplicants.length > this.quota) {\r\n      this.matchedWith = allApplicants.slice(0, this.quota);\r\n    } else {\r\n      this.matchedWith = allApplicants;\r\n    }\r\n    this.appliedBy = [];\r\n    let stuToAdd = this.matchedWith.filter(\r\n      (ele) => !previousList.includes(ele)\r\n    );\r\n    let stuToDrop = previousList.filter(\r\n      (ele) => !this.matchedWith.includes(ele)\r\n    );\r\n    return [stuToAdd, stuToDrop];\r\n  }\r\n\r\n  setPriorityList(list) {\r\n    if (!(typeof list == \"object\")) {\r\n      throw new Error(\r\n        \"College.priorityList must be of type array but is: \" + typeof list\r\n      );\r\n    }\r\n    this.priorityList = list;\r\n  }\r\n\r\n  toString() {\r\n    return (\r\n      \"College {id: \" +\r\n      this.id +\r\n      \", matchedWith: \" +\r\n      this.matchedWith.toString() +\r\n      \"}\"\r\n    );\r\n  }\r\n\r\n  printPriorityList() {\r\n    if (this.priorityList) {\r\n      var string = this.id + \" \" + this.toString() + \": \";\r\n      this.priorityList.forEach((v, i) => {\r\n        string += i === 0 ? v : \", \" + v;\r\n      });\r\n      return string;\r\n    } else {\r\n      return this.id + \": - no priorities -\";\r\n    }\r\n  }\r\n  setRankingOfMatch() {\r\n    this.matchedWith.forEach((match) => {\r\n      this.rankingOfMatch.push(this.priorityList.indexOf(match));\r\n    });\r\n  }\r\n  resetID() {\r\n    idFactory.reset();\r\n  }\r\n}\r\n\r\nexport default College;\r\n// module.exports = College;\r\n","//https://github.com/mgschoen/stable-marriage\r\n\r\nexport default class CollegeAdmissionProblem {\r\n  constructor(studentList, collegeList) {\r\n    this.studentList = studentList;\r\n    this.collegeList = collegeList;\r\n    this.log = [];\r\n  }\r\n  //http://sephlietz.com/gale-shapley/\r\n  match(studentPropose = true) {\r\n    // if (!studentPropose) {\r\n    //   return match_CollegePropose();\r\n    // }\r\n    var round = 1;\r\n    while (this.existsFreeStudents() && round <= 9999) {\r\n      let roundLog = [];\r\n      roundLog.push(`Round ${round}`);\r\n      this.studentList.forEach((student) => {\r\n        if (student.matchedWith === null && !student.proposedToAll) {\r\n          let targetCollege = this.collegeList[student.proposeTo()];\r\n          targetCollege.appliedBy.push(student.id);\r\n          roundLog.push(\r\n            `${student.name} applied to his/her next favorite group which is ${targetCollege.name}`\r\n          );\r\n        } else {\r\n          // roundLog.push(\r\n          //   `${student.name} was already tentatively accepted by ${\r\n          //     this.collegeList[student.matchWith].name\r\n          //   }`\r\n          // );\r\n        }\r\n      });\r\n      roundLog.push(\"---------------------------------------\");\r\n      this.collegeList.forEach((college) => {\r\n        roundLog.push(`${college.name}:`);\r\n        if (college.appliedBy.length === 0) {\r\n          roundLog.push(\r\n            `${college.name} was not applied by any persons in this round`\r\n          );\r\n        } else {\r\n          roundLog.push(\r\n            `${college.name} had ${\r\n              college.quota - college.matchedWith.length\r\n            } quota left`\r\n          );\r\n          roundLog.push(\r\n            `${college.name} was applied by ${this.printStudentNames(\r\n              college.appliedBy\r\n            )} in this round`\r\n          );\r\n          let result = college.reviewWaitingList();\r\n          let [stuToAdd, stuToDrop] = result;\r\n          if (stuToAdd.length > 0) {\r\n            roundLog.push(\r\n              `${college.name} combined the previous acceptees with the new applicants this round and made the following decisions in accordance to its preference list and its remaining quota:`\r\n            );\r\n            roundLog.push(\r\n              `${college.name} tentatively accepted ${this.printStudentNames(\r\n                stuToAdd\r\n              )}`\r\n            );\r\n            if (stuToDrop.length > 0) {\r\n              roundLog.push(\r\n                `${college.name} dropped ${this.printStudentNames(stuToDrop)}`\r\n              );\r\n            }\r\n            stuToAdd.forEach((stuId) => {\r\n              let student = this.studentList[stuId];\r\n              student.matchedWith = college.id;\r\n            });\r\n            stuToDrop.forEach((stuId) => {\r\n              let student = this.studentList[stuId];\r\n              student.matchedWith = null;\r\n            });\r\n          } else {\r\n            roundLog.push(\r\n              `${college.name} rejected all of its applicants in this round`\r\n            );\r\n          }\r\n        }\r\n        roundLog.push(\"---------------------------------------\");\r\n      });\r\n      round++;\r\n      roundLog.push(\"---------------------------------------\");\r\n      this.log.push(roundLog);\r\n    }\r\n\r\n    this.studentList.forEach((student) => {\r\n      student.setRankingOfMatch();\r\n    });\r\n    this.collegeList.forEach((college) => {\r\n      college.setRankingOfMatch();\r\n    });\r\n\r\n    //this is to simply reset the IDFactory to zero for next potential matching\r\n    this.studentList[0].resetID();\r\n    this.collegeList[0].resetID();\r\n  }\r\n  existsFreeStudents() {\r\n    for (let student of this.studentList) {\r\n      if (student.matchedWith === null && !student.proposedToAll) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  printStudentNames(listOfStuID) {\r\n    const nameList = listOfStuID.map((id) => this.studentList[id].name);\r\n    let nameString = nameList.reduce((acc, ele) => acc + \" \" + ele, \"(\");\r\n    nameString = nameString + \")\";\r\n    return nameString;\r\n  }\r\n}\r\n\r\n// module.exports = CollegeAdmissionProblem;\r\n","//wrapper: raw data => config.js => CollegeAdmission.js\r\nimport config from \"./config\";\r\nimport CollegeAdmissionProblem from \"./CollegeAdmission\";\r\n// const config = require(\"./config\");\r\n// const CollegeAdmissionProblem = require(\"./CollegeAdmission\");\r\n\r\nfunction run(stuData, colData) {\r\n  const [studentList, collegeList] = config(stuData, colData);\r\n  let problem = new CollegeAdmissionProblem(studentList, collegeList);\r\n  problem.match();\r\n  const stuResult = stuData.map((stu, index) => {\r\n    const result = {\r\n      ...stu,\r\n      matchedWith: studentList[index].matchedWith,\r\n      isMatched: studentList[index].matchedWith !== null,\r\n      matchedWithName:\r\n        studentList[index].matchedWith !== null\r\n          ? collegeList[studentList[index].matchedWith].name\r\n          : null,\r\n      rankingOfMatch: studentList[index].rankingOfMatch,\r\n      preferenceNames: stu.preference.map((pos) => collegeList[pos].name),\r\n    };\r\n    return result;\r\n  });\r\n  const colResult = colData.map((col, index) => {\r\n    const result = {\r\n      ...col,\r\n      matchedWith: collegeList[index].matchedWith,\r\n      quotaLeft:\r\n        collegeList[index].quota - collegeList[index].matchedWith.length,\r\n      matchedWithName:\r\n        collegeList[index].matchedWith.length > 0\r\n          ? collegeList[index].matchedWith.map((pos) => studentList[pos].name)\r\n          : null,\r\n      rankingOfMatch: collegeList[index].rankingOfMatch,\r\n      preferenceNames: col.preference.map((pos) => studentList[pos].name),\r\n    };\r\n    return result;\r\n  });\r\n  let allPairs = stuResult.map((stu, index) => {\r\n    const result =\r\n      stu.rankingOfMatch !== -1\r\n        ? {\r\n            stuPreference: stu.rankingOfMatch,\r\n            colPreference: collegeList[\r\n              studentList[index].matchedWith\r\n            ].priorityList.indexOf(index),\r\n            pairing: `${studentList[index].name} <-> ${\r\n              collegeList[studentList[index].matchedWith].name\r\n            }`,\r\n          }\r\n        : null;\r\n    return result;\r\n  });\r\n  allPairs = allPairs.filter((pair) => pair !== null);\r\n  return [stuResult, colResult, problem.log, allPairs];\r\n}\r\n\r\nexport default run;\r\n// module.exports = run;\r\n","//convert raw data from front-end to college/students objects for CollegeAdmission.js\r\n// const Student = require(\"./Student.js\");\r\n// const College = require(\"./College.js\");\r\nimport Student from \"./Student.js\";\r\nimport College from \"./College.js\";\r\n\r\nexport default function config(stuData, colData) {\r\n  const studentList = [];\r\n  const collegeList = [];\r\n  stuData.forEach((stu) => {\r\n    const student = new Student(stu.name, stu.preference);\r\n    studentList.push(student);\r\n  });\r\n\r\n  colData.forEach((col) => {\r\n    const college = new College(col.name, col.quota, col.preference);\r\n    collegeList.push(college);\r\n  });\r\n  return [studentList, collegeList];\r\n}\r\n\r\n// module.exports = config;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport run from \"../algorithm/run\";\r\n\r\nconst RunAlgorithm = () => {\r\n  const {\r\n    initiated,\r\n    collegeData,\r\n    setCollegeResult,\r\n    individualData,\r\n    setIndividualResult,\r\n    logDetails,\r\n    setLogDetails,\r\n    setAllPairs,\r\n  } = useContext(UserContext);\r\n  const runAlgorithm = (e) => {\r\n    e.preventDefault();\r\n    const [newIndividualData, newCollegeData, logDetails, allPairs] = run(\r\n      individualData,\r\n      collegeData\r\n    );\r\n    setCollegeResult(newCollegeData);\r\n    setIndividualResult(newIndividualData);\r\n    setLogDetails(logDetails);\r\n    setAllPairs(allPairs);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {initiated ? (\r\n        <button onClick={runAlgorithm}>Begin matching</button>\r\n      ) : null}\r\n      {logDetails.map((round, index1) => (\r\n        <div key={index1}>\r\n          {round.map((sentence, index2) => (\r\n            <p key={index2}>{sentence}</p>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RunAlgorithm;\r\n","import \"handsontable/dist/handsontable.full.css\";\r\nimport React from \"react\";\r\nimport { HotTable } from \"@handsontable/react\";\r\n// import Handsontable from \"handsontable\";\r\n\r\nconst SpreadSheet = ({ data, isStu }) => {\r\n  const dataIndexedOne = isStu\r\n    ? data.map((ele) => {\r\n        const newEle = { ...ele, rankingOfMatch: ele.rankingOfMatch + 1 };\r\n        return newEle;\r\n      })\r\n    : data.map((ele) => {\r\n        const newEle = {\r\n          ...ele,\r\n          rankingOfMatch: ele.rankingOfMatch.map((pos) => pos + 1),\r\n        };\r\n        return newEle;\r\n      });\r\n  const setting = isStu\r\n    ? {\r\n        data: dataIndexedOne,\r\n        dataSchema: {\r\n          idx: null,\r\n          name: null,\r\n          preferenceNames: null,\r\n          matchedWithName: null,\r\n          rankingOfMatch: null,\r\n          isMatched: null,\r\n        },\r\n        startCols: 6,\r\n        colHeaders: [\r\n          \"ID\",\r\n          \"Name\",\r\n          \"Preference\",\r\n          \"Matched with\",\r\n          \"Ranking of match\",\r\n          \"Is Matched\",\r\n        ],\r\n        rowHeaders: true,\r\n        columns: [\r\n          { data: \"idx\" },\r\n          { data: \"name\" },\r\n          { data: \"preferenceNames\" },\r\n          { data: \"matchedWithName\" },\r\n          { data: \"rankingOfMatch\" },\r\n          { data: \"isMatched\" },\r\n        ],\r\n\r\n        licenseKey: \"non-commercial-and-evaluation\",\r\n      }\r\n    : {\r\n        data: dataIndexedOne,\r\n        dataSchema: {\r\n          idx: null,\r\n          name: null,\r\n          quota: null,\r\n          preferenceNames: null,\r\n          matchedWithName: null,\r\n          rankingOfMatch: null,\r\n          quotaLeft: null,\r\n        },\r\n        startCols: 7,\r\n        colHeaders: [\r\n          \"ID\",\r\n          \"Name\",\r\n          \"Quota\",\r\n          \"Preference\",\r\n          \"Matched with\",\r\n          \"Ranking of match\",\r\n          \"Quota left\",\r\n        ],\r\n        rowHeaders: true,\r\n        columns: [\r\n          { data: \"idx\" },\r\n          { data: \"name\" },\r\n          { data: \"quota\" },\r\n          { data: \"preferenceNames\" },\r\n          { data: \"matchedWithName\" },\r\n          { data: \"rankingOfMatch\" },\r\n          { data: \"quotaLeft\" },\r\n        ],\r\n\r\n        licenseKey: \"non-commercial-and-evaluation\",\r\n      };\r\n  return (\r\n    <div>\r\n      <div>\r\n        {isStu\r\n          ? \"Matching result of the individuals:\"\r\n          : \"Matching result of the groups:\"}\r\n      </div>\r\n      <HotTable settings={setting} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpreadSheet;\r\n","import React, { useState } from \"react\";\r\nimport \"react-vis/dist/style.css\";\r\nimport {\r\n  XYPlot,\r\n  HexbinSeries,\r\n  XAxis,\r\n  YAxis,\r\n  ChartLabel,\r\n  Borders,\r\n  Hint,\r\n} from \"react-vis\";\r\n\r\nconst HexbinSizeChart = ({ data, stuN, colN }) => {\r\n  const [hoveredNode, setHoveredNode] = useState();\r\n  const dataIndexedOne = data.map((ele) => {\r\n    const newEle = {\r\n      ...ele,\r\n      stuPreference: ele.stuPreference + 1,\r\n      colPreference: ele.colPreference + 1,\r\n    };\r\n    return newEle;\r\n  });\r\n  return (\r\n    <XYPlot\r\n      xDomain={[-1, colN + 1]}\r\n      yDomain={[-1, stuN + 1]}\r\n      getX={(d) => d.stuPreference}\r\n      getY={(d) => d.colPreference}\r\n      width={500}\r\n      height={300}\r\n      margin={50}\r\n      onMouseLeave={() => setHoveredNode(null)}\r\n    >\r\n      <HexbinSeries\r\n        sizeHexagonsWithCount\r\n        animation\r\n        className=\"hexbin-example\"\r\n        style={{\r\n          stroke: \"#125C77\",\r\n          strokeLinejoin: \"round\",\r\n        }}\r\n        colorRange={[\"orange\", \"cyan\"]}\r\n        onValueMouseOver={(d) => {\r\n          setHoveredNode(d);\r\n        }}\r\n        radius={15}\r\n        data={dataIndexedOne}\r\n      />\r\n      <Borders style={{ all: { fill: \"#fff\" } }} />\r\n      <XAxis />\r\n      <YAxis />\r\n      <ChartLabel\r\n        text=\"Position of selected persons in preference list\"\r\n        className=\"alt-x-label\"\r\n        xPercent={0.1}\r\n        yPercent={0.0}\r\n        style={{\r\n          transform: \"rotate(90)\",\r\n          textAnchor: \"start\",\r\n        }}\r\n      />\r\n\r\n      <ChartLabel\r\n        text=\"Position of selected groups in preference list\"\r\n        className=\"alt-y-label\"\r\n        xPercent={0.5}\r\n        yPercent={0.65}\r\n        style={{\r\n          textAnchor: \"start\",\r\n        }}\r\n      />\r\n      {hoveredNode && (\r\n        <Hint\r\n          xType=\"literal\"\r\n          yType=\"literal\"\r\n          getX={(d) => hoveredNode[0].stuPreference}\r\n          getY={(d) => hoveredNode[0].colPreference}\r\n          value={{\r\n            \"personal preference\": hoveredNode[0].stuPreference,\r\n            \"group preference\": hoveredNode[0].colPreference,\r\n            match:\r\n              hoveredNode.length === 1\r\n                ? hoveredNode[0].pairing\r\n                : `${hoveredNode[0].pairing} and ${\r\n                    hoveredNode.length - 1\r\n                  } more`,\r\n            frequency: hoveredNode.length,\r\n          }}\r\n        />\r\n      )}\r\n    </XYPlot>\r\n  );\r\n};\r\n\r\nexport default HexbinSizeChart;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport SpreadSheet from \"../spreadsheet/spreadsheet\";\r\nimport HexbinSizeChart from \"../hexchart/hexchart\";\r\n\r\nconst Result = () => {\r\n  const { stuN, colN, individualResult, collegeResult, allPairs } = useContext(\r\n    UserContext\r\n  );\r\n  return (\r\n    <div>\r\n      {collegeResult.length > 0 ? (\r\n        <SpreadSheet isStu={false} data={collegeResult} />\r\n      ) : null}\r\n      {individualResult.length > 0 ? (\r\n        <SpreadSheet isStu={true} data={individualResult} />\r\n      ) : null}\r\n      {allPairs.length > 0 ? (\r\n        <HexbinSizeChart data={allPairs} stuN={stuN} colN={colN} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { UserContext } from \"./UserContext\";\nimport Layout from \"./layout/layout\";\nimport Instructions from \"./instructions/instructions\";\nimport Setup from \"./setup/setup\";\nimport RunAlgorithm from \"./run-algorithm/runAlgorithm\";\nimport Result from \"./result/result\";\n\nfunction App() {\n  const [stuN, setStuN] = useState(0);\n  const [colN, setColN] = useState(0);\n  const [initiated, initiate] = useState(false);\n  const [collegeData, setCollegeData] = useState([]);\n  const [individualData, setIndividualData] = useState([]);\n  const [collegeResult, setCollegeResult] = useState([]);\n  const [individualResult, setIndividualResult] = useState([]);\n  const [logDetails, setLogDetails] = useState([]);\n  const [allPairs, setAllPairs] = useState([]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        stuN,\n        setStuN,\n        colN,\n        setColN,\n        initiated,\n        initiate,\n        collegeData,\n        setCollegeData,\n        individualData,\n        setIndividualData,\n        collegeResult,\n        setCollegeResult,\n        individualResult,\n        setIndividualResult,\n        logDetails,\n        setLogDetails,\n        allPairs,\n        setAllPairs,\n      }}\n    >\n      <Layout>\n        {/* <Instructions /> */}\n        <Switch>\n          <Route exact path=\"/\" component={Setup} />\n          <Route exact path=\"/run\" component={RunAlgorithm} />\n          <Route exact path=\"/results\" component={Result} />\n        </Switch>\n        {/* <Setup />\n        <RunAlgorithm />\n        <Result /> */}\n      </Layout>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}