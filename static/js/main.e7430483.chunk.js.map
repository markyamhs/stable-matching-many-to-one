{"version":3,"sources":["algorithm/utils.js","individual-data/individualData.module.scss","college-data/collegeData.module.scss","algorithm/config.js","algorithm/Student.js","algorithm/College.js","algorithm/CollegeAdmission.js","UserContext.js","dragNdrop/dragPreferrence.js","individual-data/individualData.js","college-data/collegeData.js","setup/setup.js","algorithm/run.js","run-algorithm/runAlgorithm.js","App.js","index.js"],"names":["IDFactory","this","count","id","module","exports","indentify","string","digits","diff","length","indentation","shuffledArray","orig","shuffle","Array","c","pick","Math","floor","random","indexOf","Student","require","College","stuData","colData","studentList","collegeList","forEach","stu","student","name","preference","push","col","college","quota","idFactory","preferenceList","createID","matchedWith","nextProposal","proposedToAll","priorityList","rankingOfMatch","list","Error","toString","v","i","reset","appliedBy","previousList","allApplicants","concat","self","sort","stuA","stuB","rankingA","rankingB","slice","filter","ele","includes","match","CollegeAdmissionProblem","log","round","roundLog","targetCollege","proposeTo","printStudentNames","result","reviewWaitingList","stuToAdd","stuToDrop","stuId","existsFreeStudents","setRankingOfMatch","resetID","listOfStuID","nameString","map","reduce","acc","UserContext","createContext","DragPreference","isGroup","idx","useContext","collegeData","setCollegeData","individualData","setIndividualData","onDragEnd","destination","newPreferenceList","startIndex","endIndex","from","splice","removed","reorder","source","index","newCollegeData","item","newIndividualData","droppableId","direction","provided","snapshot","ref","innerRef","style","isDraggingOver","background","display","padding","overflow","droppableProps","key","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","placeholder","IndividualData","className","IndividualDataStyles","rowContainer","type","value","onChange","event","target","handleChange","CollegeData","CollegeDataStyles","Setup","stuN","setStuN","colN","setColN","initiated","initiate","initialize","e","preventDefault","createCollegeArray","createIndividualArray","newCollegeArray","parseInt","keys","newIndividualArray","onClick","config","run","problem","RunAlgorithm","setCollegeResult","setIndividualResult","logDetails","individualResult","collegeResult","setLogDetails","index1","sentence","index2","App","useState","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7430483.chunk.js","sourcesContent":["// const College = require(\"./College\");\r\n\r\nclass IDFactory {\r\n  constructor() {\r\n    this.count = 0;\r\n  }\r\n\r\n  createID() {\r\n    let id = this.count;\r\n    this.count += 1;\r\n    return id;\r\n  }\r\n  reset() {\r\n    this.count = 0;\r\n  }\r\n}\r\n// const createColleges = (N) => {};\r\n\r\nconst indentify = (string, digits = 3) => {\r\n  let diff = digits - (string + \"\").length;\r\n  var indentation = \"\";\r\n  while (diff > 0) {\r\n    indentation += \" \";\r\n    diff--;\r\n  }\r\n  return indentation + string;\r\n};\r\n\r\nconst shuffledArray = (orig) => {\r\n  var shuffle = new Array(orig.length);\r\n  var c = 0;\r\n  while (c < orig.length) {\r\n    var pick = orig[Math.floor(Math.random() * orig.length)];\r\n    if (shuffle.indexOf(pick) < 0) {\r\n      shuffle[c] = pick;\r\n      c++;\r\n    }\r\n  }\r\n  return shuffle;\r\n};\r\n\r\nmodule.exports = {\r\n  IDFactory: IDFactory,\r\n  indentify: indentify,\r\n  shuffledArray: shuffledArray,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowContainer\":\"individualData_rowContainer__3Xd6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowContainer\":\"collegeData_rowContainer__3U01K\"};","//convert raw data from front-end to college/students objects for CollegeAdmission.js\r\nconst Student = require(\"./Student.js\");\r\nconst College = require(\"./College.js\");\r\n\r\nfunction config(stuData, colData) {\r\n  const studentList = [];\r\n  const collegeList = [];\r\n  stuData.forEach((stu) => {\r\n    const student = new Student(stu.name, stu.preference);\r\n    studentList.push(student);\r\n  });\r\n\r\n  colData.forEach((col) => {\r\n    const college = new College(col.name, col.quota, col.preference);\r\n    collegeList.push(college);\r\n  });\r\n  return [studentList, collegeList];\r\n}\r\n\r\nmodule.exports = config;\r\n","const utils = require(\"./utils.js\");\r\nconst idFactory = new utils.IDFactory();\r\n\r\nclass Student {\r\n  constructor(name, preferenceList) {\r\n    this.id = idFactory.createID();\r\n    this.matchedWith = null;\r\n    this.nextProposal = 0;\r\n    this.proposedToAll = false;\r\n    this.name = name;\r\n    this.priorityList = preferenceList;\r\n    this.rankingOfMatch = -1;\r\n  }\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  setPriorityList(list) {\r\n    if (!(typeof list == \"object\")) {\r\n      throw new Error(\r\n        \"Person.priorityList must be of type array but is: \" + typeof list\r\n      );\r\n    }\r\n    this.priorityList = list;\r\n  }\r\n\r\n  proposeTo() {\r\n    this.nextProposal++;\r\n    if (this.nextProposal === this.priorityList.length) {\r\n      this.proposedToAll = true;\r\n    }\r\n    return this.priorityList[this.nextProposal - 1];\r\n  }\r\n\r\n  toString() {\r\n    return (\r\n      \"Student {id: \" + this.id + \", matchedWith: \" + this.matchedWith + \"}\"\r\n    );\r\n  }\r\n\r\n  printPriorityList() {\r\n    if (this.priorityList) {\r\n      var string = this.id + \" \" + this.toString() + \": \";\r\n      this.priorityList.forEach((v, i) => {\r\n        string += i === 0 ? v : \", \" + v;\r\n      });\r\n      return string;\r\n    } else {\r\n      return this.id + \": - no priorities -\";\r\n    }\r\n  }\r\n\r\n  setRankingOfMatch() {\r\n    this.rankingOfMatch = this.priorityList.indexOf(this.matchedWith);\r\n  }\r\n\r\n  resetID() {\r\n    idFactory.reset();\r\n  }\r\n}\r\n\r\nmodule.exports = Student;\r\n","const utils = require(\"./utils.js\");\r\nconst idFactory = new utils.IDFactory();\r\n\r\nclass College {\r\n  constructor(name, quota, preferenceList) {\r\n    this.id = idFactory.createID();\r\n    this.matchedWith = [];\r\n    this.appliedBy = [];\r\n    this.quota = quota;\r\n    this.nextProposal = 0;\r\n    this.name = name;\r\n    this.priorityList = preferenceList;\r\n    this.rankingOfMatch = [];\r\n  }\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n  reviewWaitingList() {\r\n    if (this.appliedBy.length === 0) {\r\n      return null;\r\n    }\r\n    const previousList = this.matchedWith;\r\n    let allApplicants = this.matchedWith.concat(this.appliedBy);\r\n\r\n    var self = this;\r\n    function compareStudent(stuA, stuB) {\r\n      let rankingA = self.priorityList.indexOf(stuA);\r\n      let rankingB = self.priorityList.indexOf(stuB);\r\n      if (rankingA < rankingB) {\r\n        return -1;\r\n      }\r\n      if (rankingA > rankingB) {\r\n        return 1;\r\n      }\r\n    }\r\n    allApplicants.sort(compareStudent);\r\n\r\n    if (allApplicants.length > this.quota) {\r\n      this.matchedWith = allApplicants.slice(0, this.quota);\r\n    } else {\r\n      this.matchedWith = allApplicants;\r\n    }\r\n    this.appliedBy = [];\r\n    let stuToAdd = this.matchedWith.filter(\r\n      (ele) => !previousList.includes(ele)\r\n    );\r\n    let stuToDrop = previousList.filter(\r\n      (ele) => !this.matchedWith.includes(ele)\r\n    );\r\n    return [stuToAdd, stuToDrop];\r\n  }\r\n\r\n  setPriorityList(list) {\r\n    if (!(typeof list == \"object\")) {\r\n      throw new Error(\r\n        \"College.priorityList must be of type array but is: \" + typeof list\r\n      );\r\n    }\r\n    this.priorityList = list;\r\n  }\r\n\r\n  toString() {\r\n    return (\r\n      \"College {id: \" +\r\n      this.id +\r\n      \", matchedWith: \" +\r\n      this.matchedWith.toString() +\r\n      \"}\"\r\n    );\r\n  }\r\n\r\n  printPriorityList() {\r\n    if (this.priorityList) {\r\n      var string = this.id + \" \" + this.toString() + \": \";\r\n      this.priorityList.forEach((v, i) => {\r\n        string += i === 0 ? v : \", \" + v;\r\n      });\r\n      return string;\r\n    } else {\r\n      return this.id + \": - no priorities -\";\r\n    }\r\n  }\r\n  setRankingOfMatch() {\r\n    this.matchedWith.forEach((match) => {\r\n      this.rankingOfMatch.push(this.priorityList.indexOf(match));\r\n    });\r\n  }\r\n  resetID() {\r\n    idFactory.reset();\r\n  }\r\n}\r\n\r\nmodule.exports = College;\r\n","//https://github.com/mgschoen/stable-marriage\r\n\r\nclass CollegeAdmissionProblem {\r\n  constructor(studentList, collegeList) {\r\n    this.studentList = studentList;\r\n    this.collegeList = collegeList;\r\n    this.log = [];\r\n  }\r\n  //http://sephlietz.com/gale-shapley/\r\n  match(studentPropose = true) {\r\n    // if (!studentPropose) {\r\n    //   return match_CollegePropose();\r\n    // }\r\n    var round = 1;\r\n    while (this.existsFreeStudents() && round <= 9999) {\r\n      let roundLog = [];\r\n      roundLog.push(`Round ${round}`);\r\n      this.studentList.forEach((student) => {\r\n        if (student.matchedWith === null && !student.proposedToAll) {\r\n          let targetCollege = this.collegeList[student.proposeTo()];\r\n          targetCollege.appliedBy.push(student.id);\r\n          roundLog.push(\r\n            `${student.name} applied to his/her next favorite group which is ${targetCollege.name}`\r\n          );\r\n        } else {\r\n          // roundLog.push(\r\n          //   `${student.name} was already tentatively accepted by ${\r\n          //     this.collegeList[student.matchWith].name\r\n          //   }`\r\n          // );\r\n        }\r\n      });\r\n      roundLog.push(\"---------------------------------------\");\r\n      this.collegeList.forEach((college) => {\r\n        roundLog.push(`${college.name}:`);\r\n        if (college.appliedBy.length === 0) {\r\n          roundLog.push(\r\n            `${college.name} was not applied by any persons in this round`\r\n          );\r\n        } else {\r\n          roundLog.push(\r\n            `${college.name} had ${\r\n              college.quota - college.matchedWith.length\r\n            } quota left`\r\n          );\r\n          roundLog.push(\r\n            `${college.name} was applied by ${this.printStudentNames(\r\n              college.appliedBy\r\n            )} in this round`\r\n          );\r\n          let result = college.reviewWaitingList();\r\n          let [stuToAdd, stuToDrop] = result;\r\n          if (stuToAdd.length > 0) {\r\n            roundLog.push(\r\n              `${college.name} combined the previous acceptees with the new applicants this round and made the following decisions in accordance to its preference list and its remaining quota:`\r\n            );\r\n            roundLog.push(\r\n              `${college.name} tentatively accepted ${this.printStudentNames(\r\n                stuToAdd\r\n              )}`\r\n            );\r\n            if (stuToDrop.length > 0) {\r\n              roundLog.push(\r\n                `${college.name} dropped ${this.printStudentNames(stuToDrop)}`\r\n              );\r\n            }\r\n            stuToAdd.forEach((stuId) => {\r\n              let student = this.studentList[stuId];\r\n              student.matchedWith = college.id;\r\n            });\r\n            stuToDrop.forEach((stuId) => {\r\n              let student = this.studentList[stuId];\r\n              student.matchedWith = null;\r\n            });\r\n          } else {\r\n            roundLog.push(\r\n              `${college.name} rejected all of its applicants in this round`\r\n            );\r\n          }\r\n        }\r\n        roundLog.push(\"---------------------------------------\");\r\n      });\r\n      round++;\r\n      roundLog.push(\"---------------------------------------\");\r\n      this.log.push(roundLog);\r\n    }\r\n\r\n    this.studentList.forEach((student) => {\r\n      student.setRankingOfMatch();\r\n    });\r\n    this.collegeList.forEach((college) => {\r\n      college.setRankingOfMatch();\r\n    });\r\n\r\n    //this is to simply reset the IDFactory to zero for next potential matching\r\n    this.studentList[0].resetID();\r\n    this.collegeList[0].resetID();\r\n  }\r\n  existsFreeStudents() {\r\n    for (let student of this.studentList) {\r\n      if (student.matchedWith === null && !student.proposedToAll) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  printStudentNames(listOfStuID) {\r\n    const nameList = listOfStuID.map((id) => this.studentList[id].name);\r\n    let nameString = nameList.reduce((acc, ele) => acc + \" \" + ele, \"(\");\r\n    nameString = nameString + \")\";\r\n    return nameString;\r\n  }\r\n}\r\n\r\nmodule.exports = CollegeAdmissionProblem;\r\n","import { createContext } from \"react\";\r\nexport const UserContext = createContext(null);\r\n","import React, { useContext } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { UserContext } from \"../UserContext\";\r\n\r\nconst DragPreference = ({ isGroup, idx }) => {\r\n  const {\r\n    collegeData,\r\n    setCollegeData,\r\n    individualData,\r\n    setIndividualData,\r\n  } = useContext(UserContext);\r\n  const preferenceList = isGroup\r\n    ? collegeData[idx].preference\r\n    : individualData[idx].preference;\r\n\r\n  const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  const grid = 8;\r\n\r\n  const getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: `0 ${grid}px 0 0`,\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  });\r\n\r\n  const getListStyle = (isDraggingOver) => ({\r\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n    display: \"flex\",\r\n    padding: grid,\r\n    overflow: \"auto\",\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const newPreferenceList = reorder(\r\n      preferenceList,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    if (isGroup) {\r\n      const newCollegeData = collegeData.map((item) => {\r\n        if (item.idx === idx) {\r\n          const updatedItem = {\r\n            ...item,\r\n            preference: newPreferenceList,\r\n          };\r\n          return updatedItem;\r\n        }\r\n\r\n        return item;\r\n      });\r\n      setCollegeData(newCollegeData);\r\n    } else {\r\n      const newIndividualData = individualData.map((item) => {\r\n        if (item.idx === idx) {\r\n          const updatedItem = {\r\n            ...item,\r\n            preference: newPreferenceList,\r\n          };\r\n          return updatedItem;\r\n        }\r\n\r\n        return item;\r\n      });\r\n      setIndividualData(newIndividualData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            style={getListStyle(snapshot.isDraggingOver)}\r\n            {...provided.droppableProps}\r\n          >\r\n            {preferenceList.map((item, index) => {\r\n              return (\r\n                <Draggable key={item} draggableId={`${item}`} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      {isGroup\r\n                        ? individualData[item].name\r\n                        : collegeData[item].name}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              );\r\n            })}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default DragPreference;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport IndividualDataStyles from \"./individualData.module.scss\";\r\nimport DragPreference from \"../dragNdrop/dragPreferrence\";\r\n\r\nconst IndividualData = () => {\r\n  const { individualData, setIndividualData } = useContext(UserContext);\r\n  const handleChange = (event, idx) => {\r\n    const newIndividualData = individualData.map((item) => {\r\n      if (item.idx === idx) {\r\n        const updatedItem = {\r\n          ...item,\r\n          [event.target.name]: event.target.value,\r\n        };\r\n        return updatedItem;\r\n      }\r\n\r\n      return item;\r\n    });\r\n    setIndividualData(newIndividualData);\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        {individualData.map((ele, idx) => {\r\n          return (\r\n            <div key={idx} className={IndividualDataStyles.rowContainer}>\r\n              <div>Person {idx}</div>\r\n              <div>\r\n                Name\r\n                <input\r\n                  type=\"text\"\r\n                  id={`individual-${idx}-name`}\r\n                  name=\"name\"\r\n                  value={individualData[idx].name}\r\n                  onChange={(event) => handleChange(event, idx)}\r\n                />\r\n              </div>\r\n              <div>\r\n                Preference\r\n                <DragPreference isGroup={false} idx={idx} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndividualData;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport CollegeDataStyles from \"./collegeData.module.scss\";\r\nimport DragPreference from \"../dragNdrop/dragPreferrence\";\r\n\r\nconst CollegeData = () => {\r\n  const { collegeData, setCollegeData } = useContext(UserContext);\r\n  const handleChange = (event, idx) => {\r\n    const newCollegeData = collegeData.map((item) => {\r\n      if (item.idx === idx) {\r\n        const updatedItem = {\r\n          ...item,\r\n          [event.target.name]: event.target.value,\r\n        };\r\n        return updatedItem;\r\n      }\r\n\r\n      return item;\r\n    });\r\n    setCollegeData(newCollegeData);\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        {collegeData.map((ele, idx) => {\r\n          return (\r\n            <div key={idx} className={CollegeDataStyles.rowContainer}>\r\n              <div>Group {idx}</div>\r\n              <div>\r\n                Name\r\n                <input\r\n                  type=\"text\"\r\n                  id={`college-${idx}-name`}\r\n                  name=\"name\"\r\n                  value={collegeData[idx].name}\r\n                  onChange={(event) => handleChange(event, idx)}\r\n                />\r\n              </div>\r\n              <div>\r\n                Quota\r\n                <input\r\n                  type=\"number\"\r\n                  id={`college-${idx}-quota`}\r\n                  name=\"quota\"\r\n                  value={collegeData[idx].quota}\r\n                  onChange={(event) => handleChange(event, idx)}\r\n                />\r\n              </div>\r\n              <div>\r\n                Preference\r\n                <DragPreference isGroup={true} idx={idx} />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollegeData;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport IndividualData from \"../individual-data/individualData\";\r\nimport CollegeData from \"../college-data/collegeData\";\r\n\r\nconst Setup = () => {\r\n  const {\r\n    stuN,\r\n    setStuN,\r\n    colN,\r\n    setColN,\r\n    initiated,\r\n    initiate,\r\n    setCollegeData,\r\n    setIndividualData,\r\n  } = useContext(UserContext);\r\n  const initialize = (e) => {\r\n    e.preventDefault();\r\n    setCollegeData(createCollegeArray(colN));\r\n    setIndividualData(createIndividualArray(stuN));\r\n    initiate(true);\r\n  };\r\n  const createCollegeArray = (colN) => {\r\n    let newCollegeArray = [];\r\n    for (var i = 0; i < colN; i++) {\r\n      newCollegeArray.push({\r\n        idx: i,\r\n        name: `Group ${i}`,\r\n        quota: 0,\r\n        preference: Array.from(Array(parseInt(stuN)).keys()),\r\n      });\r\n    }\r\n    return newCollegeArray;\r\n  };\r\n  const createIndividualArray = (stuN) => {\r\n    let newIndividualArray = [];\r\n    for (var i = 0; i < stuN; i++) {\r\n      newIndividualArray.push({\r\n        idx: i,\r\n        name: `Person ${i}`,\r\n        preference: Array.from(Array(parseInt(colN)).keys()),\r\n      });\r\n    }\r\n    return newIndividualArray;\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <form>\r\n          <label>\r\n            No. of individuals (e.g. applicants/trainees/employees):\r\n          </label>\r\n          <br />\r\n          <input\r\n            type=\"number\"\r\n            id=\"stuN\"\r\n            name=\"stuN\"\r\n            value={stuN}\r\n            onChange={(e) => setStuN(e.target.value)}\r\n          />\r\n          <br />\r\n          <label>No. of groups (e.g. colleges/teams/departments):</label>\r\n          <br />\r\n          <input\r\n            type=\"number\"\r\n            id=\"colN\"\r\n            name=\"colN\"\r\n            value={colN}\r\n            onChange={(e) => setColN(e.target.value)}\r\n          />\r\n          {initiated ? (\r\n            <button onClick={initialize}>Reset</button>\r\n          ) : (\r\n            <button onClick={initialize}>Set up</button>\r\n          )}\r\n        </form>\r\n      </div>\r\n      {initiated ? (\r\n        <>\r\n          <IndividualData />\r\n          <CollegeData />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setup;\r\n","//wrapper: raw data => config.js => CollegeAdmission.js\r\nconst config = require(\"./config\");\r\nconst CollegeAdmissionProblem = require(\"./CollegeAdmission\");\r\n\r\nfunction run(stuData, colData) {\r\n  const [studentList, collegeList] = config(stuData, colData);\r\n  let problem = new CollegeAdmissionProblem(studentList, collegeList);\r\n  problem.match();\r\n  const stuResult = stuData.map((stu, index) => {\r\n    const result = {\r\n      ...stu,\r\n      matchedWith: studentList[index].matchedWith,\r\n      rankingOfMatch: studentList[index].rankingOfMatch,\r\n    };\r\n    return result;\r\n  });\r\n  const colResult = colData.map((col, index) => {\r\n    const result = {\r\n      ...col,\r\n      matchedWith: collegeList[index].matchedWith,\r\n      rankingOfMatch: collegeList[index].rankingOfMatch,\r\n    };\r\n    return result;\r\n  });\r\n  return [stuResult, colResult, problem.log];\r\n}\r\n\r\nexport default run;\r\n// module.exports = run;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport run from \"../algorithm/run\";\r\n\r\nconst RunAlgorithm = () => {\r\n  const {\r\n    initiated,\r\n    collegeData,\r\n    setCollegeResult,\r\n    individualData,\r\n    setIndividualResult,\r\n    individualResult,\r\n    collegeResult,\r\n    logDetails,\r\n    setLogDetails,\r\n  } = useContext(UserContext);\r\n  const runAlgorithm = (e) => {\r\n    e.preventDefault();\r\n    const [newIndividualData, newCollegeData, logDetails] = run(\r\n      individualData,\r\n      collegeData\r\n    );\r\n    setCollegeResult(newCollegeData);\r\n    setIndividualResult(newIndividualData);\r\n    setLogDetails(logDetails);\r\n  };\r\n  return (\r\n    <div>\r\n      {initiated ? (\r\n        <button onClick={runAlgorithm}>Begin matching</button>\r\n      ) : null}\r\n      {logDetails.map((round, index1) => (\r\n        <div key={index1}>\r\n          {round.map((sentence, index2) => (\r\n            <p key={index2}>{sentence}</p>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RunAlgorithm;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { UserContext } from \"./UserContext\";\nimport Setup from \"./setup/setup\";\n// const main = require(\"./roughPaper\");\nimport RunAlgorithm from \"./run-algorithm/runAlgorithm\";\n\nfunction App() {\n  // main();\n  const [stuN, setStuN] = useState(0);\n  const [colN, setColN] = useState(0);\n  const [initiated, initiate] = useState(false);\n  const [collegeData, setCollegeData] = useState([]);\n  const [individualData, setIndividualData] = useState([]);\n  const [collegeResult, setCollegeResult] = useState([]);\n  const [individualResult, setIndividualResult] = useState([]);\n  const [logDetails, setLogDetails] = useState([]);\n  return (\n    <UserContext.Provider\n      value={{\n        stuN,\n        setStuN,\n        colN,\n        setColN,\n        initiated,\n        initiate,\n        collegeData,\n        setCollegeData,\n        individualData,\n        setIndividualData,\n        collegeResult,\n        setCollegeResult,\n        individualResult,\n        setIndividualResult,\n        logDetails,\n        setLogDetails,\n      }}\n    >\n      <div className=\"App\">\n        <div>many to one</div>\n        <div>stable matching</div>\n        <Setup />\n        <RunAlgorithm />\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}