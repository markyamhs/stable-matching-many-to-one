{"version":3,"sources":["algorithm/utils.js","individual-data/individualData.module.scss","college-data/collegeData.module.scss","roughPaper.js","algorithm/Student.js","algorithm/College.js","algorithm/CollegeAdmission.js","UserContext.js","individual-data/individualData.js","college-data/collegeData.js","setup/setup.js","dragNdrop/dragPreferrence.js","dragNdrop/draggableRow.js","App.js","index.js"],"names":["IDFactory","this","count","id","module","exports","indentify","string","digits","diff","length","indentation","shuffledArray","orig","shuffle","Array","c","pick","Math","floor","random","indexOf","Student","require","College","CollegeAdmissionProblem","stuA","stuB","stuC","stuD","stuE","stuF","stuG","stuH","colA","colB","colC","setPriorityList","match","console","log","idFactory","createID","matchedWith","nextProposal","proposedToAll","name","list","Error","priorityList","toString","forEach","v","i","utils","quota","appliedBy","previousList","allApplicants","concat","self","sort","rankingA","rankingB","slice","filter","ele","includes","studentList","collegeList","round","existsFreeStudents","student","proposeTo","push","college","result","reviewWaitingList","stuToAdd","stuToDrop","stuId","collegeListforEach","UserContext","createContext","IndividualData","useContext","individualData","setIndividualData","map","idx","key","className","IndividualDataStyles","rowContainer","type","value","onChange","event","newIndividualData","item","target","handleChange","CollegeData","collegeData","setCollegeData","newCollegeData","CollegeDataStyles","Setup","stuN","setStuN","colN","setColN","initiated","initiate","initialize","e","preventDefault","createCollegeArray","createIndividualArray","newCollegeArray","preference","from","k","content","newIndividualArray","onClick","DragPreference","Component","isGroup","preferenceList","onDragEnd","destination","newPreferenceList","startIndex","endIndex","splice","removed","reorder","source","index","droppableId","direction","provided","snapshot","ref","innerRef","style","isDraggingOver","background","display","padding","overflow","droppableProps","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","placeholder","App","useState","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce8e4e54.chunk.js","sourcesContent":["// const College = require(\"./College\");\r\n\r\nclass IDFactory {\r\n  constructor() {\r\n    this.count = 0;\r\n  }\r\n\r\n  createID() {\r\n    let id = this.count;\r\n    this.count += 1;\r\n    return id;\r\n  }\r\n}\r\n// const createColleges = (N) => {};\r\n\r\nconst indentify = (string, digits = 3) => {\r\n  let diff = digits - (string + \"\").length;\r\n  var indentation = \"\";\r\n  while (diff > 0) {\r\n    indentation += \" \";\r\n    diff--;\r\n  }\r\n  return indentation + string;\r\n};\r\n\r\nconst shuffledArray = (orig) => {\r\n  var shuffle = new Array(orig.length);\r\n  var c = 0;\r\n  while (c < orig.length) {\r\n    var pick = orig[Math.floor(Math.random() * orig.length)];\r\n    if (shuffle.indexOf(pick) < 0) {\r\n      shuffle[c] = pick;\r\n      c++;\r\n    }\r\n  }\r\n  return shuffle;\r\n};\r\n\r\nmodule.exports = {\r\n  IDFactory: IDFactory,\r\n  indentify: indentify,\r\n  shuffledArray: shuffledArray,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowContainer\":\"individualData_rowContainer__3Xd6e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowContainer\":\"collegeData_rowContainer__3U01K\"};","const Student = require(\"./algorithm/Student\");\r\nconst College = require(\"./algorithm/College\");\r\nconst CollegeAdmissionProblem = require(\"./algorithm/CollegeAdmission\");\r\n\r\nlet stuA = new Student();\r\nlet stuB = new Student();\r\nlet stuC = new Student();\r\nlet stuD = new Student();\r\nlet stuE = new Student();\r\nlet stuF = new Student();\r\nlet stuG = new Student();\r\nlet stuH = new Student();\r\nlet colA = new College(2);\r\nlet colB = new College(2);\r\nlet colC = new College(3);\r\nstuA.setPriorityList([1, 0, 2]);\r\nstuB.setPriorityList([0, 1, 2]);\r\nstuC.setPriorityList([1, 0, 2]);\r\nstuD.setPriorityList([1, 0, 2]);\r\nstuE.setPriorityList([1, 0, 2]);\r\nstuF.setPriorityList([0, 1, 2]);\r\nstuG.setPriorityList([1, 0, 2]);\r\nstuH.setPriorityList([1, 0, 2]);\r\ncolA.setPriorityList([5, 0, 1, 2, 3, 4, 6, 7]);\r\ncolB.setPriorityList([1, 0, 2, 3, 4, 5, 6, 7]);\r\ncolC.setPriorityList([1, 0, 2, 3, 4, 5, 6, 7]);\r\nlet problem = new CollegeAdmissionProblem(\r\n  [stuA, stuB, stuC, stuD, stuE, stuF, stuG, stuH],\r\n  [colA, colB, colC]\r\n);\r\nproblem.match();\r\n\r\nconst main = () => {\r\n  console.log([stuA, stuB, stuC, stuD, stuE, stuF, stuG, stuH]);\r\n  console.log([colA, colB, colC]);\r\n};\r\n\r\nmodule.exports = main;\r\n","const utils = require(\"./utils.js\");\r\nconst idFactory = new utils.IDFactory();\r\n\r\nclass Student {\r\n  constructor() {\r\n    this.id = idFactory.createID();\r\n    this.matchedWith = null;\r\n    this.nextProposal = 0;\r\n    this.proposedToAll = false;\r\n    this.name = \"\";\r\n  }\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  setPriorityList(list) {\r\n    if (!(typeof list == \"object\")) {\r\n      throw new Error(\r\n        \"Person.priorityList must be of type array but is: \" + typeof list\r\n      );\r\n    }\r\n    this.priorityList = list;\r\n  }\r\n\r\n  proposeTo() {\r\n    this.nextProposal++;\r\n    if (this.nextProposal === this.priorityList.length) {\r\n      this.proposedToAll = true;\r\n    }\r\n    return this.priorityList[this.nextProposal - 1];\r\n  }\r\n\r\n  toString() {\r\n    return (\r\n      \"Student {id: \" + this.id + \", matchedWith: \" + this.matchedWith + \"}\"\r\n    );\r\n  }\r\n\r\n  printPriorityList() {\r\n    if (this.priorityList) {\r\n      var string = this.id + \" \" + this.toString() + \": \";\r\n      this.priorityList.forEach((v, i) => {\r\n        string += i === 0 ? v : \", \" + v;\r\n      });\r\n      return string;\r\n    } else {\r\n      return this.id + \": - no priorities -\";\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Student;\r\n","const utils = require(\"./utils.js\");\r\nconsole.log(utils);\r\nconst idFactory = new utils.IDFactory();\r\n\r\nclass College {\r\n  constructor(quota) {\r\n    this.id = idFactory.createID();\r\n    this.matchedWith = [];\r\n    this.appliedBy = [];\r\n    this.quota = quota;\r\n    this.nextProposal = 0;\r\n    this.name = \"\";\r\n  }\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n  reviewWaitingList() {\r\n    if (this.appliedBy.length === 0) {\r\n      return null;\r\n    }\r\n    const previousList = this.matchedWith;\r\n    let allApplicants = this.matchedWith.concat(this.appliedBy);\r\n\r\n    var self = this;\r\n    function compareStudent(stuA, stuB) {\r\n      let rankingA = self.priorityList.indexOf(stuA);\r\n      let rankingB = self.priorityList.indexOf(stuB);\r\n      if (rankingA < rankingB) {\r\n        return -1;\r\n      }\r\n      if (rankingA > rankingB) {\r\n        return 1;\r\n      }\r\n    }\r\n    allApplicants.sort(compareStudent);\r\n\r\n    if (allApplicants.length > this.quota) {\r\n      this.matchedWith = allApplicants.slice(0, this.quota);\r\n    } else {\r\n      this.matchedWith = allApplicants;\r\n    }\r\n    this.appliedBy = [];\r\n    let stuToAdd = this.matchedWith.filter(\r\n      (ele) => !previousList.includes(ele)\r\n    );\r\n    let stuToDrop = previousList.filter(\r\n      (ele) => !this.matchedWith.includes(ele)\r\n    );\r\n    return [stuToAdd, stuToDrop];\r\n  }\r\n\r\n  setPriorityList(list) {\r\n    if (!(typeof list == \"object\")) {\r\n      throw new Error(\r\n        \"College.priorityList must be of type array but is: \" + typeof list\r\n      );\r\n    }\r\n    this.priorityList = list;\r\n  }\r\n\r\n  toString() {\r\n    return (\r\n      \"College {id: \" +\r\n      this.id +\r\n      \", matchedWith: \" +\r\n      this.matchedWith.toString() +\r\n      \"}\"\r\n    );\r\n  }\r\n\r\n  printPriorityList() {\r\n    if (this.priorityList) {\r\n      var string = this.id + \" \" + this.toString() + \": \";\r\n      this.priorityList.forEach((v, i) => {\r\n        string += i === 0 ? v : \", \" + v;\r\n      });\r\n      return string;\r\n    } else {\r\n      return this.id + \": - no priorities -\";\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = College;\r\n","//https://github.com/mgschoen/stable-marriage\r\n\r\nclass CollegeAdmissionProblem {\r\n  constructor(studentList, collegeList) {\r\n    this.studentList = studentList;\r\n    this.collegeList = collegeList;\r\n  }\r\n  //http://sephlietz.com/gale-shapley/\r\n  match(studentPropose = true) {\r\n    // if (!studentPropose) {\r\n    //   return match_CollegePropose();\r\n    // }\r\n    var round = 1;\r\n    while (this.existsFreeStudents() && round <= 9999) {\r\n      console.log(\"new round\");\r\n      this.studentList.forEach((student) => {\r\n        if (student.matchedWith === null && !student.proposedToAll) {\r\n          let targetCollege = this.collegeList[student.proposeTo()];\r\n          targetCollege.appliedBy.push(student.id);\r\n        }\r\n      });\r\n      this.collegeList.forEach((college) => {\r\n        let result = college.reviewWaitingList();\r\n        if (result) {\r\n          let [stuToAdd, stuToDrop] = result;\r\n          stuToAdd.forEach((stuId) => {\r\n            console.log(stuId, \" added to college \", college.id);\r\n            let student = this.studentList[stuId];\r\n            student.matchedWith = college.id;\r\n          });\r\n          stuToDrop.forEach((stuId) => {\r\n            console.log(stuId, \" dropped by college \", college.id);\r\n            let student = this.studentList[stuId];\r\n            student.matchedWith = null;\r\n          });\r\n        }\r\n      });\r\n      round++;\r\n    }\r\n  }\r\n  existsFreeStudents() {\r\n    for (let student of this.studentList) {\r\n      if (student.matchedWith === null && !student.proposedToAll) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  printResult() {\r\n    this.studentList.forEach((student) => {\r\n      console.log(\r\n        \"Stu ID: \" +\r\n          student.id +\r\n          \" was accepted by college ID: \" +\r\n          student.matchedWith\r\n      );\r\n    });\r\n    this.collegeListforEach((college) => {\r\n      console.log(college.toString());\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = CollegeAdmissionProblem;\r\n","import { createContext } from \"react\";\r\nexport const UserContext = createContext(null);\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport IndividualDataStyles from \"./individualData.module.scss\";\r\n\r\nconst IndividualData = () => {\r\n  const { individualData, setIndividualData } = useContext(UserContext);\r\n  const handleChange = (event, idx) => {\r\n    const newIndividualData = individualData.map((item) => {\r\n      if (item.idx === idx) {\r\n        const updatedItem = {\r\n          ...item,\r\n          [event.target.name]: event.target.value,\r\n        };\r\n        return updatedItem;\r\n      }\r\n\r\n      return item;\r\n    });\r\n    setIndividualData(newIndividualData);\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        {individualData.map((ele, idx) => {\r\n          return (\r\n            <div key={idx} className={IndividualDataStyles.rowContainer}>\r\n              <div>Person {idx}</div>\r\n              <div>\r\n                Name\r\n                <input\r\n                  type=\"text\"\r\n                  id={`individual-${idx}-name`}\r\n                  name=\"name\"\r\n                  value={individualData[idx].name}\r\n                  onChange={(event) => handleChange(event, idx)}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndividualData;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport CollegeDataStyles from \"./collegeData.module.scss\";\r\n\r\nconst CollegeData = () => {\r\n  const { collegeData, setCollegeData } = useContext(UserContext);\r\n  const handleChange = (event, idx) => {\r\n    const newCollegeData = collegeData.map((item) => {\r\n      if (item.idx === idx) {\r\n        const updatedItem = {\r\n          ...item,\r\n          [event.target.name]: event.target.value,\r\n        };\r\n        return updatedItem;\r\n      }\r\n\r\n      return item;\r\n    });\r\n    setCollegeData(newCollegeData);\r\n  };\r\n  return (\r\n    <>\r\n      <form>\r\n        {collegeData.map((ele, idx) => {\r\n          return (\r\n            <div key={idx} className={CollegeDataStyles.rowContainer}>\r\n              <div>Group {idx}</div>\r\n              <div>\r\n                Name\r\n                <input\r\n                  type=\"text\"\r\n                  id={`college-${idx}-name`}\r\n                  name=\"name\"\r\n                  value={collegeData[idx].name}\r\n                  onChange={(event) => handleChange(event, idx)}\r\n                />\r\n              </div>\r\n              <div>\r\n                Quota\r\n                <input\r\n                  type=\"number\"\r\n                  id={`college-${idx}-quota`}\r\n                  name=\"quota\"\r\n                  value={collegeData[idx].quota}\r\n                  onChange={(event) => handleChange(event, idx)}\r\n                />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollegeData;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../UserContext\";\r\nimport IndividualData from \"../individual-data/individualData\";\r\nimport CollegeData from \"../college-data/collegeData\";\r\n\r\nconst Setup = () => {\r\n  const {\r\n    stuN,\r\n    setStuN,\r\n    colN,\r\n    setColN,\r\n    initiated,\r\n    initiate,\r\n    setCollegeData,\r\n    setIndividualData,\r\n  } = useContext(UserContext);\r\n  const initialize = (e) => {\r\n    e.preventDefault();\r\n    setCollegeData(createCollegeArray(colN));\r\n    setIndividualData(createIndividualArray(stuN));\r\n    initiate(true);\r\n  };\r\n  const createCollegeArray = (colN) => {\r\n    let newCollegeArray = [];\r\n    for (var i = 0; i < colN; i++) {\r\n      newCollegeArray.push({\r\n        idx: i,\r\n        name: `Group ${i}`,\r\n        quota: 0,\r\n        preference: Array.from({ length: stuN }, (v, k) => k).map((k) => ({\r\n          id: `${k}`,\r\n          content: `Person ${k}`,\r\n        })),\r\n      });\r\n    }\r\n    return newCollegeArray;\r\n  };\r\n  const createIndividualArray = (stuN) => {\r\n    let newIndividualArray = [];\r\n    for (var i = 0; i < stuN; i++) {\r\n      newIndividualArray.push({\r\n        idx: i,\r\n        name: `Person ${i}`,\r\n        preference: Array.from({ length: colN }, (v, k) => k).map((k) => ({\r\n          id: `${k}`,\r\n          content: `College ${k}`,\r\n        })),\r\n      });\r\n    }\r\n    return newIndividualArray;\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <form>\r\n          <label>\r\n            No. of individuals (e.g. applicants/trainees/employees):\r\n          </label>\r\n          <br />\r\n          <input\r\n            type=\"number\"\r\n            id=\"stuN\"\r\n            name=\"stuN\"\r\n            value={stuN}\r\n            onChange={(e) => setStuN(e.target.value)}\r\n          />\r\n          <br />\r\n          <label>No. of groups (e.g. colleges/teams/departments):</label>\r\n          <br />\r\n          <input\r\n            type=\"number\"\r\n            id=\"colN\"\r\n            name=\"colN\"\r\n            value={colN}\r\n            onChange={(e) => setColN(e.target.value)}\r\n          />\r\n          {initiated ? (\r\n            <button onClick={initialize}>Reset</button>\r\n          ) : (\r\n            <button onClick={initialize}>Set up</button>\r\n          )}\r\n        </form>\r\n      </div>\r\n      {initiated ? (\r\n        <>\r\n          <IndividualData />\r\n          <CollegeData />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setup;\r\n","import React, { useContext } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { UserContext } from \"../UserContext\";\r\n\r\nconst DragPreference = ({ isGroup, idx }) => {\r\n  const {\r\n    collegeData,\r\n    setCollegeData,\r\n    individualData,\r\n    setIndividualData,\r\n  } = useContext(UserContext);\r\n  const preferenceList = isGroup\r\n    ? collegeData[idx].preference\r\n    : individualData[idx].preference;\r\n\r\n  const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  const grid = 8;\r\n\r\n  const getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: \"none\",\r\n    padding: grid * 2,\r\n    margin: `0 ${grid}px 0 0`,\r\n\r\n    // change background colour if dragging\r\n    background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  });\r\n\r\n  const getListStyle = (isDraggingOver) => ({\r\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n    display: \"flex\",\r\n    padding: grid,\r\n    overflow: \"auto\",\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const newPreferenceList = reorder(\r\n      preferenceList,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n    if (isGroup) {\r\n      const newCollegeData = collegeData.map((item) => {\r\n        if (item.idx === idx) {\r\n          const updatedItem = {\r\n            ...item,\r\n            preference: newPreferenceList,\r\n          };\r\n          return updatedItem;\r\n        }\r\n\r\n        return item;\r\n      });\r\n      setCollegeData(newCollegeData);\r\n    } else {\r\n      const newIndividualData = individualData.map((item) => {\r\n        if (item.idx === idx) {\r\n          const updatedItem = {\r\n            ...item,\r\n            preference: newPreferenceList,\r\n          };\r\n          return updatedItem;\r\n        }\r\n\r\n        return item;\r\n      });\r\n      setIndividualData(newIndividualData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            style={getListStyle(snapshot.isDraggingOver)}\r\n            {...provided.droppableProps}\r\n          >\r\n            {preferenceList.map((item, index) => (\r\n              <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={getItemStyle(\r\n                      snapshot.isDragging,\r\n                      provided.draggableProps.style\r\n                    )}\r\n                  >\r\n                    {item.content}\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default DragPreference;\r\n","//https://egghead.io/lessons/react-reorder-a-list-with-react-beautiful-dnd\r\n//https://codesandbox.io/s/mmrp44okvj?file=/index.js:0-2939\r\nimport React, { Component } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n// fake data generator\r\nconst getItems = (count) =>\r\n  Array.from({ length: count }, (v, k) => k).map((k) => ({\r\n    id: `item-${k}`,\r\n    content: `item ${k}`,\r\n  }));\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 ${grid}px 0 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle,\r\n});\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  display: \"flex\",\r\n  padding: grid,\r\n  overflow: \"auto\",\r\n});\r\n\r\nclass DraggableRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: getItems(6),\r\n    };\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  onDragEnd(result) {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.setState({\r\n      items,\r\n    });\r\n  }\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n  render() {\r\n    console.log(this.state.items);\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n              {...provided.droppableProps}\r\n            >\r\n              {this.state.items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      {item.content}\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DraggableRow;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { UserContext } from \"./UserContext\";\nimport Setup from \"./setup/setup\";\nimport DraggableRow from \"./dragNdrop/draggableRow\";\nimport DragPreferrence from \"./dragNdrop/dragPreferrence\";\nconst main = require(\"./roughPaper\");\n\nfunction App() {\n  // main();\n  const [stuN, setStuN] = useState(0);\n  const [colN, setColN] = useState(0);\n  const [initiated, initiate] = useState(false);\n  const [collegeData, setCollegeData] = useState([]);\n  const [individualData, setIndividualData] = useState([]);\n  console.log(collegeData);\n  console.log(individualData);\n  return (\n    <UserContext.Provider\n      value={{\n        stuN,\n        setStuN,\n        colN,\n        setColN,\n        initiated,\n        initiate,\n        collegeData,\n        setCollegeData,\n        individualData,\n        setIndividualData,\n      }}\n    >\n      <div className=\"App\">\n        <div>many to one</div>\n        <div>stable matching</div>\n        <Setup />\n        {/* <DraggableRow /> */}\n        {initiated ? <DragPreferrence isGroup={false} idx={1} /> : null}\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}